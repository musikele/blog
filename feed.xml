<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.1">Jekyll</generator><link href="https://michelenasti.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://michelenasti.com/" rel="alternate" type="text/html" /><updated>2017-07-27T11:14:45+02:00</updated><id>https://michelenasti.com/</id><title type="html">Michele Nasti’s blog</title><subtitle>I'm a full stack Developer with an eye for the web.</subtitle><entry><title type="html">E’ giusto fidarsi dei remote workers?</title><link href="https://michelenasti.com/2017/07/19/e-giusto-fidarsi-dei-remote-workers.html" rel="alternate" type="text/html" title="E' giusto fidarsi dei remote workers?" /><published>2017-07-19T00:00:00+02:00</published><updated>2017-07-19T12:26:31+02:00</updated><id>https://michelenasti.com/2017/07/19/e-giusto-fidarsi-dei-remote-workers</id><content type="html" xml:base="https://michelenasti.com/2017/07/19/e-giusto-fidarsi-dei-remote-workers.html">&lt;p&gt;Cari amici, ho scritto &lt;a href=&quot;https://medium.com/bemind-me/e-giusto-fidarsi-dei-remote-workers-987ecc2d65be&quot;&gt;un articolo per il blog di Bemind&lt;/a&gt; sul tema del lavoro remoto e la fiducia tra capo e dipendente, ossia: possiamo fidarci dei lavoratori remoti? Cliccate sul link per leggerlo.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="lavoro remoto" /><category term="remote working" /><category term="remote" /><category term="bemind" /><summary type="html">Cari amici, ho scritto un articolo per il blog di Bemind sul tema del lavoro remoto e la fiducia tra capo e dipendente, ossia: possiamo fidarci dei lavoratori remoti? Cliccate sul link per leggerlo.</summary></entry><entry><title type="html">Sei uno scienziato di fama internazionale e ti accusano di trafficare virus. Che fai?</title><link href="https://michelenasti.com/2017/07/18/recensione-libro-io-trafficante-di-virus-ilaria-capua.html" rel="alternate" type="text/html" title="Sei uno scienziato di fama internazionale e ti accusano di trafficare virus. Che fai?" /><published>2017-07-18T00:00:00+02:00</published><updated>2017-07-18T13:06:32+02:00</updated><id>https://michelenasti.com/2017/07/18/recensione-libro-io-trafficante-di-virus-ilaria-capua</id><content type="html" xml:base="https://michelenasti.com/2017/07/18/recensione-libro-io-trafficante-di-virus-ilaria-capua.html">&lt;p&gt;Oggi voglio parlarvi di un &lt;a href=&quot;http://amzn.to/2taKqFg&quot;&gt;libro&lt;/a&gt; che mi ha colpito molto. Per una volta esco fuori dal mondo informatico per sconfinare nel mondo della scienza veterinaria, che non è assolutamente il mio campo.&lt;/p&gt;

&lt;p&gt;Qualche settimana fa ho ascoltato una radiointervista a Ilaria Capua, virologa di fama internazionale che lavorava presso l’istituto zootecnico di Legnaro.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://amzn.to/2taKqFg&quot;&gt;&lt;img src=&quot;/images/trafficante_di_virus.png&quot; class=&quot; forestry--none&quot; style=&quot;float: none;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;due-parole-sullo-scienziato-ilaria-capua&quot;&gt;Due parole sullo scienziato Ilaria Capua&lt;/h2&gt;

&lt;p&gt;La dott.ssa Capua si è laureata in veterinaria e si è poi specializzata in virologia animale. Ha ricoperto un ruolo chiave durante l’epidemia di influenza aviaria, sviluppando la strategia di vaccinazione DIVA che permette di scoprire se un animale è stato contagiato dal virus o dal vaccino, salvando dall’abbattimento interi allevamenti avicoli.&lt;/p&gt;

&lt;p&gt;Ma forse il motivo per cui l’umanità dovrebbe esserle riconoscente è perchè, &lt;strong&gt;nel 2005, decise di salvare la sequenza genetica del virus H5N1 in un database libero e gratuito&lt;/strong&gt;, piuttosto che fare come s’è sempre fatto, ossia inviare la codifica ad un database a pagamento a cui solo una quindicina di istituti mondiali avevano accesso.&lt;/p&gt;

&lt;p&gt;Prima di questo momento, solo una ristretta cerchia di istituti potevano effettivamente fare ricerche sui virus più pericolosi e quindi svilupparne vaccini.&lt;/p&gt;

&lt;p&gt;Da quel momento, invece, tutti i seguenti virus del mondo sono diventati praticamente “open source” permettendo la condivisione delle informazioni e il loro studio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;la notizia ha avuto una portata così epocale&lt;/strong&gt; che anche giornali non specialistici ne hanno parlato. Questo gesto le è valso il &lt;strong&gt;Penn Vet Award,&lt;/strong&gt; praticamente il Nobel per la veterinaria.&lt;/p&gt;

&lt;p&gt;Avrete capito che non stiamo parlando di una persona qualunque.&lt;/p&gt;

&lt;h2 id=&quot;e-ora-parliamo-del-libro&quot;&gt;E ora parliamo del libro&lt;/h2&gt;

&lt;p&gt;Il libro racconta l’incredibile vicenda vissuta dalla dottoressa: nel 2014 è stata accusata di aver “venduto” virus dell’Istituto ad aziende e privati, con lo scopo di produrre vaccini. Inoltre, è anche accusata di aver provocato intenzionalmente epidemie di aviaria per specularci.&lt;/p&gt;

&lt;p&gt;Tutto viene divulgato nel peggiore dei modi, ossia tramite la pubblicazione di intercettazioni da parte dell’Espresso.&lt;/p&gt;

&lt;p&gt;Nel libro si ripercorrono sia le vicende scientifiche, sia il dramma umano di una donna, madre e scienziata che si trova all’improvviso a fare i conti con la giustizia italiana, incredibilemente lenta e farraginosa.&lt;/p&gt;

&lt;p&gt;Giusto per darvi qualche dettaglio che mi ha colpito di più: lo sapete quante volte è stata interrogata dal giudice? &lt;strong&gt;Mai&lt;/strong&gt;. E a parte le intercettazioni, quali altre prove sono state portate a processo? &lt;strong&gt;Nessuna&lt;/strong&gt;. &lt;em&gt;Segui i soldi&lt;/em&gt;, dicono gli investigatori dei film, ma non essendocene in questa vicenda, non si poteva seguire alcunchè. Nell’indagine si parlava anche del brevetto &lt;em&gt;milionario&lt;/em&gt; per il vaccino, che in realtà non ha fruttato alcun provente alla dottoressa.&lt;/p&gt;

&lt;p&gt;Inoltre i magistrati commettono errori banali, ad esempio sbagliano i nomi dei virus, le date, le epidemie, e soprattutto non conoscono il modo in cui un virus viene trasmesso (non basta far cadere una provetta a terra per infettarsi!), insomma una bella stronzata all’italiana.&lt;/p&gt;

&lt;p&gt;Perchè leggere questo libro? Un po’ per &lt;strong&gt;incazzarvi del sistema Italia,&lt;/strong&gt; oggi che si parla di anti-vaccinisti, terra-piattisti, scia-chimisti e tutt’il resto delle ciarlatanerie che girano in rete. Un po’ perchè &lt;strong&gt;abbiamo fatto fuggire all’estero un cervello che lavorava benissimo qui da noi&lt;/strong&gt;: ora la dottoressa dirige un centro di ricerca a Miami. E soprattutto per capire &lt;strong&gt;come ci si sente ad essere accusati ingiustamente.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ovviamente &lt;strong&gt;il processo è finito con l’assoluzione&lt;/strong&gt;, mentre l’Espresso non ha ritrattato alcunchè delle proprie posizioni. A &lt;a href=&quot;http://espresso.repubblica.it/attualita/2014/04/03/news/salute-quel-business-segreto-della-vendita-dei-virus-1.159618&quot;&gt;quest link&lt;/a&gt; ad esempio potrete leggere l’articolo di accusa nei confronti della scienziata, ma i commenti incazzati dei lettori in fondo mi fanno credere che c’è ancora qualcuno con un po’ di sale in zucca qui in Italia.&lt;/p&gt;

&lt;p&gt;Non mi resta che lasciavi con il &lt;a href=&quot;http://amzn.to/2taKqFg&quot;&gt;link del libro&lt;/a&gt; e augurarvi una bella lettura, magari sotto l’ombrellone!&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="ilaria capua" /><category term="io trafficante di virus" /><category term="libro" /><summary type="html">Oggi voglio parlarvi di un libro che mi ha colpito molto. Per una volta esco fuori dal mondo informatico per sconfinare nel mondo della scienza veterinaria, che non è assolutamente il mio campo.</summary></entry><entry><title type="html">Recensione del libro: Codice Montemagno</title><link href="https://michelenasti.com/2017/07/17/recensione-del-libro-codice-montemagno.html" rel="alternate" type="text/html" title="Recensione del libro: Codice Montemagno" /><published>2017-07-17T00:00:00+02:00</published><updated>2017-07-17T12:12:41+02:00</updated><id>https://michelenasti.com/2017/07/17/recensione-del-libro-codice-montemagno</id><content type="html" xml:base="https://michelenasti.com/2017/07/17/recensione-del-libro-codice-montemagno.html">&lt;p&gt;Il libro di cui vi parlo oggi è &lt;a href=&quot;http://amzn.to/2uqzV4j&quot;&gt;Codice Montemagno&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/codice_montemagno.jpg&quot; class=&quot; forestry--none forestry--none forestry--none&quot; style=&quot;float: none;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marco &lt;em&gt;Monty&lt;/em&gt; Montemagno&lt;/strong&gt; è un esperto di social media e di comunicazione  italiano. Da circa 15-20 anni si occupa di tutto ciò che è tecnologia &amp;amp; comunicazione. Ha fondato la piattaforma Blogo nel 2005, che poi ha venduto, e ora diciamo che lavora &lt;em&gt;in proprio&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Un altro elemento per comprendere l’autore è la sua &lt;strong&gt;presenza on line&lt;/strong&gt;. Da circa 2 anni Marco pubblica un breve video quotidiano, in cui parla di business, comunicazione, digital, social, strategie, etc. Da quando ha iniziato quest’opera di divulgazione è passato da 7000 a 200.000 fan su facebook. A ogni video che posta fa centinaia di commenti e like. Perché?&lt;/p&gt;

&lt;p&gt;Oltre che puntare ai contenuti, che sono di indubbia qualità, Marco ha ridefinito lo standard della comunicazione digitale in Italia. Ha creato un nuovo linguaggio visivo che, dobbiamo ammetterlo, è stato copiato in lungo e in largo dagli altri.&lt;/p&gt;

&lt;h2 id=&quot;ma-parliamo-del-libro&quot;&gt;Ma parliamo del libro&lt;/h2&gt;

&lt;p&gt;Se quindi conoscete Montemagno per i suoi trascorsi on line, non vi dovrebbe stupire il fatto che nel momento in cui ha “annunciato” il libro, quindi senza aver spedito neanche una copia, già era in cima alla classifica dei libri più venduti su Amazon.&lt;/p&gt;

&lt;p&gt;Il libro è una versione riveduta e corretta, anzi meglio organizzata, di quanto ha già proposto online. Nel libro ci sono tantissime citazioni di altri libri (quanto leggi, monty?!) da cui partono una serie di riflessioni e come possiamo applicare questo genere di info al nostro business, che sia tradizionale o innovativo.&lt;/p&gt;

&lt;p&gt;Mi hanno in particolare stupito un paio di paragrafi. Uno che analizzava il fenomeno Trump dal punto di vista mediatico e come fosse possibile prevedere, un anno prima delle elezioni, che le avrebbe vinte lui nonostante gli scandali. Questo perchè Trump è un personaggio mediatico straordinario (ricordate Berlusconi?) e quindi è un maestro nell’antica arte di “spararla grossa”.&lt;/p&gt;

&lt;p&gt;Un altro spunto interessante riguarda il ruolo che i video avranno nel futuro dei social. Il testo ormai sta scomparando, complice anche una generazione di analfabeti funzionali che ci circonda (questa opinione è mia, non del Monty). I video invece funzionano perchè sono diretti, perchè Facebook li predilige rispetto al testo, e soprattutto perchè la gente li guarda. Ho suggerito a mia moglie di applicare questo consiglio dei video alla sua attività e lei ha potuto davvero confermare che il tasso di interazione ai suoi post è aumentato.&lt;/p&gt;

&lt;h2 id=&quot;un-giudizio-più-ragionato&quot;&gt;Un giudizio più ragionato&lt;/h2&gt;

&lt;p&gt;Se non avete mai visto nulla di Montemagno, questo libro sarà per voi una  sorpresa, specialmente se avete a che fare col digitale.&lt;/p&gt;

&lt;p&gt;Se come me, avete visto una decina di suoi video (considerate che ne ha fatti più di 400!), il libro vi ripresenterà le idee in forma più chiara, discorsiva, organica.&lt;/p&gt;

&lt;p&gt;I contenuti hanno secondo me senso a prescindere dal personaggio che li propone, anche se detti da lui che li ha vissuti in prima persona assumono un ulteriore senso di realtà.&lt;/p&gt;

&lt;p&gt;Se invece pensi che i video di Montemagno siano banali, o li hai già visti tutti almeno due volte, puoi anche risparmiarti di comprare il libro: ti sembrerà di rileggere ciò che hai già sentito.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="codice montemagno" /><category term="marco montemagno" /><category term="libri" /><summary type="html">Il libro di cui vi parlo oggi è Codice Montemagno.</summary></entry><entry><title type="html">Quanto è complicato essere Elon Musk</title><link href="https://michelenasti.com/2017/06/29/caspiterina-quanto-e-complicato-essere-elon-musk.html" rel="alternate" type="text/html" title="Quanto è complicato essere Elon Musk" /><published>2017-06-29T00:00:00+02:00</published><updated>2017-06-29T11:54:28+02:00</updated><id>https://michelenasti.com/2017/06/29/caspiterina-quanto-e-complicato-essere-elon-musk</id><content type="html" xml:base="https://michelenasti.com/2017/06/29/caspiterina-quanto-e-complicato-essere-elon-musk.html">&lt;p&gt;Stamattina ho “audioascoltato” &lt;a href=&quot;http://amzn.to/2ullR8A&quot;&gt;un libro su Elon Musk&lt;/a&gt;, che è davvero un personaggio fuori dalle righe. Mi hanno colpito un paio di passaggi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/FabMelodia-MarteELONmusk.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Da adolescente studiava solo le materie che riteneva davvero necessarie, come matematica e fisica; in tutte le altre si accontentava della sufficienza.&lt;/li&gt;
  &lt;li&gt;Passava i weekend a leggere, dai fumetti alla fantascienza. Anche 2 libri al giorno!&lt;/li&gt;
  &lt;li&gt;Veniva bullizzato perchè aveva quel famoso atteggiamento “so tutto io”&lt;/li&gt;
  &lt;li&gt;E nella sua prima azienda, da lui fondata, era a capo dello sviluppo tecnico. Si confrontava tutti i giorni con persone che non avevano le sue spiccate doti e si incazzava quando gli sviluppatori non lo seguivano, non lo capivano, o lo contraddicevano. Addirittura gli sviluppatori, quando tornavano al lavoro al mattino, trovavano il loro lavoro cambiato o completato perchè Elon ci aveva messo mano!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Insomma, un personaggio davvero fuori dalle righe.I progetti più rivoluzionari vengono dalla testa di quest’uomo: l’&lt;strong&gt;auto elettrica&lt;/strong&gt;, il &lt;strong&gt;razzo spaziale riutilizzabile&lt;/strong&gt;, la &lt;strong&gt;capsula-treno superveloce&lt;/strong&gt;…&lt;/p&gt;

&lt;p&gt;Qual è la differenza tra un genio come lui, e un genio qualsiasi? Elon (ormai siamo amici) ha uno spiccato senso degli affari. La sua intelligenza l’ha sempre utilizzata per ricavarci qualcosa, dal punto di vista economico. Ecco alcuni esempi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A 12 anni ha venduto il suo primo videogioco piuttosto rudimentale, per 550$.&lt;/li&gt;
  &lt;li&gt;Al college, oltre a riparare pc e a scrivere piccoli software per gli amici, aveva trasformato il dormitorio in un night club in cui si pagava 5€ l’ingresso. Il sabato registravano anche 500 ingressi!&lt;/li&gt;
  &lt;li&gt;Da adolescente stava per aprire una sala giochi col fratello, progetto arenatosi quando nessun adulto ha voluto mettere la firma per gli adempimenti normativi.&lt;/li&gt;
  &lt;li&gt;Aveva meno di 30 anni ed era già multimilionario.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Musk ha davvero stravolto le idee che avevamo sulla genialità: in futuro lo paragoneremo a un Leonardo Da Vinci, o a un Einstein? Chissà.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="elon musk" /><summary type="html">Stamattina ho “audioascoltato” un libro su Elon Musk, che è davvero un personaggio fuori dalle righe. Mi hanno colpito un paio di passaggi.</summary></entry><entry><title type="html">We’ waglio’, vuoi venire a lavorare nella mia startup?</title><link href="https://michelenasti.com/2017/06/09/we-waglio-vuoi-venire-a-lavorare-nella-mia-startup.html" rel="alternate" type="text/html" title="We' waglio', vuoi venire a lavorare nella mia startup?" /><published>2017-06-09T11:20:50+02:00</published><updated>2017-06-09T12:18:28+02:00</updated><id>https://michelenasti.com/2017/06/09/we-waglio-vuoi-venire-a-lavorare-nella-mia-startup</id><content type="html" xml:base="https://michelenasti.com/2017/06/09/we-waglio-vuoi-venire-a-lavorare-nella-mia-startup.html">&lt;p&gt;Ricevo almeno &lt;strong&gt;due richieste al mese&lt;/strong&gt; per collaborare con startup. 
Più o meno il copione è sempre lo stesso:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;“Ciao Michele, non ci conosciamo, ma ti ho trovato on line e ho pensato di parlarti della mia startup…“&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;“Dimmi!”&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“Abbiamo questa idea rivoluzionaria, sorprenderemo il mondo, &lt;strong&gt;non abbiamo competitor&lt;/strong&gt;, etc etc”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;“Fantastico! Dove posso vedere una demo?”&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“No, per ora non abbiamo ancora nulla. Anzi, stavamo proprio cercando qualcuno che voglia collaborare con noi per realizzarla… Per caso sei interessato?”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;“Quindi non c’è nulla? solo un’idea nella tua testa?”&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“C’è molto più dell’idea! Ho quasi fatto tutto, manca solo il prodotto!”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;“…”&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;“Ti darò una quota importante della società, il 30%”&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;“…”&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;michele-sei-troppo-spocchioso&quot;&gt;Michele, sei troppo spocchioso&lt;/h2&gt;

&lt;p&gt;Cari amici startupper, E’ dal 2012 che è esplosa la moda in Italia. Non so se ve ne ho mai parlato ma il mio rimpianto più grande è quello di &lt;strong&gt;non&lt;/strong&gt; aver lavorato in una startup, da neolaureato; ma questa è un’altra storia che approfondirò successivamente.&lt;/p&gt;

&lt;p&gt;Ciò che sbagliano tutte le persone che mi contattano (e giuro che sono &lt;em&gt;almeno&lt;/em&gt; due al mese) è che pretendono che io debba rimanere affascinato dal loro racconto e quasi quasi debba chiedere io di lavorare per loro. Non funziona così.&lt;/p&gt;

&lt;p&gt;Innanzitutto, &lt;strong&gt;la mia tolleranza al rischio si è abbassata di molto&lt;/strong&gt;. Ora che ho una figlia ci penso 10 volte prima di prendere qualsiasi scelta che possa compromettere non la mia vita, ma la sua. Per questo motivo &lt;em&gt;il momento migliore in cui si deve lanciare (o lavorare per) una startup è subito dopo l’università&lt;/em&gt;, quando si è ancora ragazzini e c’è un fantastico paracadute, ossia mamma &amp;amp; papà.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lavorare per una startup implica un periodo più o meno lungo di lavoro senza un’entrata fissa&lt;/strong&gt;, che in genere arriva quando si realizza una delle seguenti condizioni:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un investitore ci mette i soldi&lt;/li&gt;
  &lt;li&gt;La startup trova dei clienti paganti&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trovare un investitore è difficile:  in Italia i fondi di investimento disposti a finanziare qualcosa si contano sulle dita di una mano. E se ti danno il cash, te lo danno quando hai almeno un MVP o una demo da mostrare.&lt;/p&gt;

&lt;p&gt;Per questo penso che in Italia convenga partire con l’idea di fatturare prima possibile, per quanto difficile questo possa sembrare.&lt;/p&gt;

&lt;p&gt;Motivo per cui scarto tutte le startup che non sanno rispondere alla domanda &lt;strong&gt;“come intendi fare soldi?”&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;tra-ceo-e-cto-deve-esserci-qualcosa-di-più-forte-di-un-matrimonio&quot;&gt;Tra CEO e CTO deve esserci qualcosa di più forte di un matrimonio&lt;/h2&gt;

&lt;p&gt;Leggevo un interessante articolo in cui si diceva che il 65% delle startup non falliscono perchè non trovano clienti o investitori, bensì perchè &lt;a href=&quot;http://money.cnn.com/2014/02/24/smallbusiness/startups-entrepreneur-cofounder/index.html&quot;&gt;i fondatori litigano&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mettiamoci nei panni dell’aspirante startupper che ho citato prima: contatta persone a caso su facebook chiedendogli di lavorare alla sua idea.&lt;/p&gt;

&lt;p&gt;Troverà mai qualcuno? Gli auguro di si, ma non penso proprio che succederà in maniera così scontata. Ma chi?&lt;/p&gt;

&lt;p&gt;Dovendo lavorare con qualcuno per lanciare un’azienda, con l’ansia costante di finire i soldi, le persone che fanno nascere una startup dovrebbero essere:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;affiatate tra di loro&lt;/li&gt;
  &lt;li&gt;avere lo stesso obiettivo&lt;/li&gt;
  &lt;li&gt;persone che si fanno guidare dai “numeri” e non dai sentimenti.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una coppia di sposi &lt;a href=&quot;http://fundersandfounders.com/startup-dirty-laundry-conflicts-that-kill-partnerships/&quot;&gt;litiga in media 321 volte in un anno&lt;/a&gt; (Statistiche USA eh, io e mia moglie litighiamo molto meno 😂) eppure nel migliore dei casi restano insieme per tutta la vita; Tra fondatori di una startup deve esserci un grado di alchimia più forte, visto che in questo caso non c’è amore ma ambizione.&lt;/p&gt;

&lt;p&gt;E qui andiamo a finire su un’altra fissa dei founder: &lt;strong&gt;sono così convinto che debba funzionare, che funzionerà&lt;/strong&gt;. Purtroppo non funziona così. Lo startupper eccellente fa esperimenti continui, verifica con i numeri che le sue ipotesi erano corrette, e se sono sbagliate, cambia modello di business.&lt;/p&gt;

&lt;h2 id=&quot;perchè-non-riesco-a-trovare-sviluppatori-per-la-mia-startup&quot;&gt;Perchè non riesco a trovare sviluppatori per la mia startup?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tutti quelli che contatto mi dicono che sono impegnati o che non stanno valutando di cambiare lavoro. Io però offro di diventare capi in un’azienda che sarà anche loro. Perchè non accettano?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I motivi possono essere tanti e diversi. Ad esempio:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Il rischio&lt;/strong&gt;. Lo sviluppatore non vede prospettive nell’idea proposta e teme di rimanere con nulla in mano nel giro di poco.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;La sensazione di inadeguatezza.&lt;/strong&gt; Chi sono io per mettermi a fare il “capo” in una startup?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;La mancanza di risparmi accantonati&lt;/strong&gt;. Senza soldi, è impossibile lavorare per un lungo periodo senza entrate.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando si propone uno stipendio, questo è molto basso&lt;/strong&gt;. Un altro motivo per cui bisogna cercare tra i neolaureati.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Quando lo stipendio è basso, si propongono le equity&lt;/strong&gt;. Per me le equity di un progetto in cui non credo valgono zero.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Perché sembra che il grosso del lavoro lo debba fare proprio io&lt;/strong&gt;. Se il mio fantomatico CEO dice di aver fatto “tutto”, tranne il prodotto, mentre io svilupperò lui che fa?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Perchè io a questo CEO non lo conosco e non so se mi sta antipatico&lt;/strong&gt;. Come fai a &lt;em&gt;fidanzarti&lt;/em&gt; con uno che non conosci?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;e-possibile-superare-questi-problemi-troverò-sviluppatori-per-la-mia-idea&quot;&gt;E’ possibile superare questi problemi? Troverò sviluppatori per la mia idea?&lt;/h2&gt;

&lt;p&gt;Ho dei consigli a riguardo, non posso garantire nulla, ma certe cose funzionano meglio di altre. Ne parlerò in futuro. Intanto, se avete critiche, suggerimenti o impressioni, i commenti sono qui sotto.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="startup" /><category term="lavoro" /><summary type="html">Ricevo almeno due richieste al mese per collaborare con startup. Più o meno il copione è sempre lo stesso:</summary></entry><entry><title type="html">Cinque tool per migliorare la vostra developer experience</title><link href="https://michelenasti.com/2017/05/30/cinque-tool-per-migliorare-la-vostra-developer-experience.html" rel="alternate" type="text/html" title="Cinque tool per migliorare la vostra developer experience" /><published>2017-05-30T14:07:50+02:00</published><updated>2017-06-15T11:51:21+02:00</updated><id>https://michelenasti.com/2017/05/30/cinque-tool-per-migliorare-la-vostra-developer-experience</id><content type="html" xml:base="https://michelenasti.com/2017/05/30/cinque-tool-per-migliorare-la-vostra-developer-experience.html">&lt;p&gt;Riuscireste a svolgere il vostro lavoro senza la linea di comando? Se siete come me, ossia amanti di bash, ecco alcuni tool che vi permetteranno di migliorare la vostra &lt;em&gt;developer experience&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;mac-command-line&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mac&lt;/code&gt; command line&lt;/h3&gt;

&lt;p&gt;Si &lt;a href=&quot;https://github.com/guarinogabriel/Mac-CLI&quot;&gt;installa da linea di comando&lt;/a&gt; e crea un eseguibile, &lt;code class=&quot;highlighter-rouge&quot;&gt;mac&lt;/code&gt;, che permette di svolgere molte operazioni comuni con pochi click.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/demo-mac-cli.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Un esempio?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mac ip:public&lt;/code&gt; vi restituisce il vostro ip pubblico&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mac speedtest&lt;/code&gt; esegue uno speed test da linea di comando&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mac memory&lt;/code&gt; vi dice quale app sta consumando la vostra preziosa RAM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;e tanti altri. Sono circa una cinquantina!&lt;/p&gt;

&lt;h3 id=&quot;oh-my-zsh-per-un-terminale-più-combattivo&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Oh-my-zsh&lt;/code&gt; per un terminale più combattivo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;Oh-my-zsh&lt;/a&gt; è un tool che va a sovrascrivere un po’ di cose nei vostri file di configurazione di zsh. In particolare, modifica il funzionamento del prompt di comando mostrandovi le informazioni di cui più avete bisogno:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/oh-my-zsh.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Insomma, avrete sott’occhio user, cartella in cui vi trovate, repository e branch, senza impazzire. E poi migliora anche l’utilizzo dell’autocompletamento (il TAB). Ci sono anche i plugin. Oh my!&lt;/p&gt;

&lt;h3 id=&quot;ngrok-per-testare-chiamate-api-dallesterno&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok&lt;/code&gt;, per testare chiamate API dall’esterno&lt;/h3&gt;

&lt;p&gt;Dovete testare le chiamate di un sistema esterno verso il vostro software? Ad esempio, io ho avuto questa esigenza con le API di Paypal e Gestpay: a un certo punto questi sistemi dovevano notificarmi che i pagamenti erano andati a buon fine e mi avrebbero contattato agli indirizzi configurati.&lt;/p&gt;

&lt;p&gt;Come testare e come verificare il contenuto di queste chiamate? Facile, con &lt;a href=&quot;https://ngrok.com/&quot;&gt;ngrok&lt;/a&gt;: un tool che permette di creare un tunnel privato da un indirizzo http esterno.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ngrok.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Per farla facile, voi lanciate &lt;code class=&quot;highlighter-rouge&quot;&gt;ngrok http 8000&lt;/code&gt; e ngrok creerà un indirizzo tipo &lt;code class=&quot;highlighter-rouge&quot;&gt;http://abc33344422.ngrok.io&lt;/code&gt;. Visitando questo indirizzo (anche dall’esterno della vostra rete privata!) ngrok redirige il traffico a&lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:8000&lt;/code&gt;. Tutto ciò che passa per ngrok viene loggato e mostrato!&lt;/p&gt;

&lt;h3 id=&quot;git-flow-una-metodologia-per-semplificare-e-standardizzare-git-nel-team&quot;&gt;Git Flow, una metodologia per semplificare e standardizzare git nel team&lt;/h3&gt;

&lt;p&gt;Git flow è sia &lt;a href=&quot;https://github.com/nvie/gitflow&quot;&gt;un tool installabile da linea di comando&lt;/a&gt;, sia un approccio filosofico alla domanda “come lavorare in gruppo”.&lt;/p&gt;

&lt;p&gt;Git è un potentissimo sistema di versioning e branching; spero per voi che lo stiate già utilizzando altrimenti brrrr.&lt;/p&gt;

&lt;p&gt;Con git flow organizziamo il lavoro in due &lt;em&gt;meta-filoni&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;branch &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;, che corrisponde alle versioni rilasciate&lt;/li&gt;
  &lt;li&gt;branch &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt;, ossia dove gli sviluppatori committano le feature sviluppate, in attesa di rilascio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oltre a questi due branch “generali”, ogni azione degli sviluppatori è realizzata creando nuovi branch:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gli sviluppi delle singole feature sui branch &lt;code class=&quot;highlighter-rouge&quot;&gt;feature/*tua_feature*&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;I rilasci (da develop a master) su branch chiamati &lt;code class=&quot;highlighter-rouge&quot;&gt;release/*nome_release*&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;le hotfix (fix, correzioni a bug, di versioni già rilasciate) su branch &lt;code class=&quot;highlighter-rouge&quot;&gt;hotfix/*nome_fix*&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Non ci avete capito niente? &lt;a href=&quot;https://danielkummer.github.io/git-flow-cheatsheet/&quot;&gt;Qui un grafico che prova a spiegare comandi e funzioni&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bonus-postman-per-testare-le-interfacce-rest&quot;&gt;Bonus: Postman per testare le interfacce Rest&lt;/h3&gt;

&lt;p&gt;Ho iniziato a lavorare che c’era SOAP e si stava appena iniziando a parlare di REST. Qualche anno dopo, SOAP è diventato &lt;em&gt;legacy&lt;/em&gt; e tutti si dichiarano REST, chi bene e chi male.&lt;/p&gt;

&lt;p&gt;Ad ogni modo, è sorta l’esigenza di testare le interfacce REST e come testarle se non con &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.getpostman.com/img/v2/logo-big.svg&quot; alt=&quot;Postman&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Questa è  una vera e propria applicazione &lt;em&gt;standalone&lt;/em&gt; che permette di effettuare ogni tipo di chiamata desideriate, GET - PUT - POST - HEAD etc. C’è la possibilità di salvare le chiamate, passare header aggiuntivi, visualizzare i dati in molti modi (ad esempio JSON), etc etc.&lt;/p&gt;

&lt;p&gt;Come dite? non è un tool da linea di comando? Avete ragione, ma questo è il mio blog e qui comando io 😂&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="git flow" /><category term="mac-cli" /><category term="oh-my-zsh" /><category term="postman" /><category term="ngrok" /><summary type="html">Riuscireste a svolgere il vostro lavoro senza la linea di comando? Se siete come me, ossia amanti di bash, ecco alcuni tool che vi permetteranno di migliorare la vostra developer experience.</summary></entry><entry><title type="html">I colloqui di lavoro nelle Big</title><link href="https://michelenasti.com/2017/05/22/i-colloqui-di-lavoro-nelle-big.html" rel="alternate" type="text/html" title="I colloqui di lavoro nelle Big" /><published>2017-05-22T17:08:19+02:00</published><updated>2017-05-22T19:05:00+02:00</updated><id>https://michelenasti.com/2017/05/22/i-colloqui-di-lavoro-nelle-big</id><content type="html" xml:base="https://michelenasti.com/2017/05/22/i-colloqui-di-lavoro-nelle-big.html">&lt;p&gt;Recentemente sono stato speaker all’evento &lt;a href=&quot;https://www.meetup.com/it-IT/GDGCampania/events/239723850/&quot;&gt;pre-Google I/O&lt;/a&gt; organizzato dal &lt;a href=&quot;http://gdgcampania.com&quot;&gt;Google Developers Group Campania&lt;/a&gt;, a Napoli.&lt;/p&gt;

&lt;p&gt;Il mio talk verteva sui colloqui di lavoro delle aziende top, e qui ci sta bene un bel disclaimer: &lt;em&gt;non ho mai fatto colloqui per aziende top  - tranne un piccolo frangente con Amazon&lt;/em&gt;. Ma ho letto molto sull’argomento, e ho chiesto in giro ad alcuni amici che hanno fatto le selezioni per queste aziende, quindi avevo un po’ di materiale che era bello condividere.&lt;/p&gt;

&lt;iframe src=&quot;https://docs.google.com/presentation/d/1eQce7aEOl8qaGPbmhQVmUQb99Sf2bioBJhmuEER4_B8/embed?start=false&amp;amp;loop=false&amp;amp;delayms=60000&quot; frameborder=&quot;0&quot; width=&quot;480&quot; height=&quot;389&quot; allowfullscreen=&quot;true&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Una parte del talk riguardava alcuni “rompicapi” che in passato, più che oggi, venivano sottoposti agli aspiranti candidati. Fermo restando che agli intervistatori non interessa sapere la risposta (ammesso che esista!), semmai vogliono vedere in che modo approcciate i problemi, che ragionamenti fate, insomma quanta creatività avete.&lt;/p&gt;

&lt;p&gt;Torno a ribadire: queste domande sono “rare” e tutte le persone in carne ed ossa con cui ho parlato non le hanno ricevute; tuttavia, dato che esiste un libro sull’argomento (&lt;a href=&quot;http://amzn.to/2rKTgbo&quot;&gt;“sei abbastanza sveglio per lavorare in google?”, di William Poundstone&lt;/a&gt;), e considerato che sono un appassionato di indovinelli, non ho potuto ignorare.&lt;/p&gt;

&lt;p&gt;A fine talk molti sono venuti per chiedermi le “soluzioni” (che ripeto: non sempre esistono) o gli approcci; altri sono venuti a pormi degli indovinelli, ai quali per mia fortuna sono riuscito a trovare la risposta in tempo (ed evitare la figura di merda 😅 ).&lt;/p&gt;

&lt;p&gt;Eccovene alcuni!&lt;/p&gt;

&lt;h3 id=&quot;dado-senza-dado&quot;&gt;Dado senza dado&lt;/h3&gt;

&lt;p&gt;Sai simulare un dado con una monetina? Puoi lanciare la moneta più volte.&lt;/p&gt;

&lt;h3 id=&quot;i-filosofi-bugiardi&quot;&gt;I Filosofi bugiardi&lt;/h3&gt;

&lt;p&gt;Attorno a un tavolo sono seduti tanti filosofi. Alcuni dicono sempre la verità; altri solo bugie.&lt;/p&gt;

&lt;p&gt;A turno, ogni filosofo prende la parola e dice: “Il filosofo alla mia sinistra è un bugiardo!”&lt;/p&gt;

&lt;p&gt;Quando tutti i filosofi hanno espresso questo importantissimo concetto, prende la parola un altro filosofo ed esclama: “siamo 21 seduti a questo tavolo!”&lt;/p&gt;

&lt;p&gt;Il suo vicino ribatte: “Non è vero! Siamo 22!”&lt;/p&gt;

&lt;p&gt;Che diamine stanno dicendo?! Quanti sono? Chi ha ragione? Come sono seduti?&lt;/p&gt;

&lt;h2 id=&quot;le-risposte-di-mia-moglie&quot;&gt;Le risposte di mia moglie&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dado senza dado:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;Con la moneta entro in un negozio e compro il dado.&amp;nbsp;&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Problema dei filosofi bugiardi:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;Cambio tavolo: vado a sedermi da un'altra parte.&amp;nbsp;&lt;/blockquote&gt;

&lt;p&gt;Posso dirvi che in aziende come Google queste risposte non sarebbero state solo degli &lt;em&gt;ice-breaker&lt;/em&gt;, ma verrebbero probabilmente considerate nel giudizio globale del&lt;span style=&quot;font-size: 1rem;&quot;&gt; candidato. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 1rem;&quot;&gt;Tuttavia non basta per superare il colloquio 😅  Scrivi la tua risposta nei commenti ;) &lt;/span&gt;&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="colloqui di lavoro" /><summary type="html">Recentemente sono stato speaker all’evento pre-Google I/O organizzato dal Google Developers Group Campania, a Napoli.</summary></entry><entry><title type="html">Agile? No grazie, noi siamo Lean</title><link href="https://michelenasti.com/2017/05/04/agile-no-grazie-preferisco-lean.html" rel="alternate" type="text/html" title="Agile? No grazie, noi siamo Lean" /><published>2017-05-04T00:00:00+02:00</published><updated>2017-05-04T15:48:25+02:00</updated><id>https://michelenasti.com/2017/05/04/agile-no-grazie-preferisco-lean</id><content type="html" xml:base="https://michelenasti.com/2017/05/04/agile-no-grazie-preferisco-lean.html">&lt;p&gt;Agile, agile, agile… ormai tutti fanno Agile, implementando un framework tipo Scrum (che è uno dei possibili modi di essere Agile).&lt;/p&gt;

&lt;p&gt;Per dare una definizione: siete &lt;em&gt;Agile&lt;/em&gt;® se la vostra metodologia di sviluppo segue il &lt;a href=&quot;http://agilemanifesto.org/iso/it/manifesto.html&quot;&gt;&lt;em&gt;Manifesto Agile&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tuttavia, è facile prendere un framework (ripeto: Scrum) e sputtanarlo per tirare fuori qualcosa che non va. Spesso ciò accade quando il management continua a ragionare a delivery fisse, chi-fa-cosa, butta-a-mare-la-qualità-dobbiamo-consegnà, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/geografia_metodologie.png&quot; alt=&quot;Quest'immagine prova a spiegare com'è fatto il mondo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ma-in-questo-post-dovevi-parlare-di-lean&quot;&gt;Ma in questo post dovevi parlare di LEAN&lt;/h2&gt;

&lt;p&gt;Avete ragione.&lt;/p&gt;

&lt;p&gt;Ritorniamo sulle definizioni. &lt;em&gt;Lean&lt;/em&gt; (in italiano: magro, scarno) è un termine preso in prestito dal settore manifatturiero, e consiste in una serie di principi da seguire per ottenere &lt;em&gt;qualità, velocità &amp;amp; soddisfazione del cliente&lt;/em&gt;. (Stesse finalità di Agile!)&lt;/p&gt;

&lt;p&gt;Il punto è che i principi base del &lt;em&gt;Lean thinking&lt;/em&gt; non sono filosofici, ma pratici. Vediamoli:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Eliminate Waste&lt;/strong&gt;: fate riunioni che non servono? Non fatele. Scrivete documenti che nessuno leggerà? Non scriveteli. Più chiaro di così!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Build Quality In&lt;/strong&gt;: Mettere in pratica tutte quelle pratiche che portano a evitare i bug, o a correggerli subito. Correggerli dopo è sempre peggio.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Create Knowledge&lt;/strong&gt;: All’inizio di un progetto difficilmente avrete idea di cosa vuole il cliente. Inoltre, ciò che sapete voi è molto diverso da ciò che conosce il vostro collega. Creare conoscenza significa soprattutto &lt;em&gt;condividerla&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Defer Commitment&lt;/strong&gt;: Prendere le decisioni all’ultmo momento utile (ossia quando non sono più rinviabili) permette di avere la maggior conoscenza possibile, e quindi di prendere decisioni migliori.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deliver Fast&lt;/strong&gt;: Prima fate vedere il prodotto al cliente, prima saprete se è quello che vuole.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Respect People&lt;/strong&gt;: non significa solo evitare di mandare a cagare il tuo collega; significa anche rispettare le scelte del gruppo, riconoscerne gli sforzi e aiutarli quando gli sforzi non producono frutti.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimize the Whole&lt;/strong&gt;. Ottimizzare il processo, nella sua interezza, significa applicare i punti precedenti. Si deve ottimizzare continuamente, a ogni livello.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fin qui era filosofia. Ma praticamente che dobbiamo fare?&lt;/p&gt;

&lt;h2 id=&quot;lean-in-pratica-gli-step-zero&quot;&gt;Lean in pratica: gli step zero&lt;/h2&gt;

&lt;p&gt;Per essere Lean nel mondo del software ci sono due &lt;strong&gt;step zero&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Source code management&lt;/strong&gt; - perchè il codice non si condivide più via email o via floppy da un bel pò. Tools come SVN (antichi!) o GIT dovreste conoscerli tutti ormai.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scripted builds&lt;/strong&gt; - il vostro prodotto deve essere generabile a partire da &lt;strong&gt;un solo comando&lt;/strong&gt;. Ancora meglio: ogni volta che committate, un ambiente di &lt;em&gt;continuous integration&lt;/em&gt; dovrebbe far partire una build automatica e verificare che sia tutto ok. Non dimenticate di mandare una mail a chi ha rotto la build ;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;create knowledge&lt;/strong&gt; - il codice è in un solo posto&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;eliminate waste&lt;/strong&gt; - nessun lavoro manuale per compilare e deployare il progetto!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;build quality in&lt;/strong&gt; - l’automazione elimina possibili cause d’errore.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vediamo ora altre pratiche che possono aiutarvi a diventare &lt;em&gt;Lean&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;il-meeting-giornaliero&quot;&gt;Il meeting giornaliero&lt;/h3&gt;

&lt;p&gt;Se dovessi scegliere un unico punto da implementare, tra tutti i punti di questo articolo, il meeting giornaliero è sicuramente quello che sceglierei io. &lt;em&gt;La comunicazione tra membri del team è dannatamente importante.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Per fare un daily meeting perfetto bisogna:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;farlo tutti i giorni, alla stessa ora&lt;/li&gt;
  &lt;li&gt;non deve superare 15 minuti&lt;/li&gt;
  &lt;li&gt;partecipano e parlano tutti&lt;/li&gt;
  &lt;li&gt;quando parla qualcuno non si fanno domande e non si interrompe&lt;/li&gt;
  &lt;li&gt;si risponde a tre domande: &lt;em&gt;cosa ho fatto ieri?&lt;/em&gt;, &lt;em&gt;cosa farò oggi?&lt;/em&gt;, &lt;em&gt;che problemi ho avuto?&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;facoltativo&lt;/em&gt;: fare il meeting in piedi (così durerà anche meno di 15 minuti)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;respect people&lt;/em&gt; - stiamo mettendo il team al centro dello sviluppo. Tutti si sentiranno di far parte di una squadra.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;create knowledge&lt;/em&gt; - Parlare di ciò che si sta facendo è il modo migliore di creare una conoscenza condivisa.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;testing-automatico&quot;&gt;Testing automatico&lt;/h3&gt;
&lt;p&gt;Qui parliamo dell’&lt;strong&gt;esecuzione automatica dei test a partire da un singolo comando&lt;/strong&gt;, con tanto di report a fine esecuzione. In questo modo avremo test che sono sempre eseguiti nello stesso modo e che non sono soggetti a errori umani.&lt;/p&gt;

&lt;p&gt;I test dovrebbero essere lanciati sia dai singoli sviluppatori mentre realizzano le feature, che dall’ambiene di continuous integration quando committiamo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Build Quality In&lt;/em&gt; - test automatici eseguiti regolarmente aiutano a prevenire i difetti.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Eliminate Waste&lt;/em&gt; - i bug vengono trovati prima, e quindi corretti prima.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Create Knowledge&lt;/em&gt; - i test sono un modo per documentare come funziona il codice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/h3&gt;
&lt;p&gt;La &lt;strong&gt;continuous integration&lt;/strong&gt; è una pratica che consiste nell’integrare i piccoli cambiamenti al codice in maniera frequente. Ciò cerca di ridurre, o addirittura eliminare, la fase di integrazione post-sviluppo.&lt;/p&gt;

&lt;p&gt;Per farlo:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Usate una macchina (vera o virtuale) per il sistema di CI.&lt;/li&gt;
  &lt;li&gt;a ogni commit, la CI deve far partire una build e i test.&lt;/li&gt;
  &lt;li&gt;I developer devono aggiornare il codice una volta al giorno; una volta all’ora è meglio.&lt;/li&gt;
  &lt;li&gt;Le build fallite devono essere subito sistemate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Build Quality In&lt;/em&gt; - in Continuous Integration, siamo sicuri che il codice sia sempre funzionante.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Eliminate Waste&lt;/em&gt; - E’ più efficiente integrare continuamente piccole modifiche che una singola grande fase di integrazione finale.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;less-code&quot;&gt;Less Code&lt;/h3&gt;
&lt;p&gt;“Less Code” significa &lt;strong&gt;scrivere solo il codice necessario per implementare la funzionalità richiesta&lt;/strong&gt;. Qui stiamo ribadendo il principio della semplicità: se una cosa è piccola è anche facile capirla; un codice sorgente vasto diventa difficile non solo da capire, ma anche testare e debuggare. Scrivere (&lt;em&gt;poco&lt;/em&gt;) codice in modo semplice è un’arte. Per poter scrivere meno codice bisogna:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;eliminare codice inutile&lt;/strong&gt;. Facile a dirsi 😊 In pratica bisogna trovare il codice, o le &lt;em&gt;forze&lt;/em&gt; che creano il codice non necessario, ed eliminarlo. Ogni codice aggiunto al repository deve essere &lt;em&gt;giustificabile&lt;/em&gt;. Sviluppa solo per l’iterazione o il task corrente, non per quelle del futuro che verrà. (Verrà?)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Migliorare l’efficienza del codice&lt;/strong&gt;. Ciò si fa applicando degli standard o comunque le best practices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Build Quality In&lt;/em&gt; - Codice che fa quello che deve fare. Cosa vuoi di più?&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Eliminate Waste&lt;/em&gt; - Codice che non serve, o mega-design-patterns che non si capiscono (o che si capiscono solo nella mente dell’autore), sono scoraggiati.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;short-iterations&quot;&gt;Short Iterations&lt;/h3&gt;

&lt;p&gt;Prima si sviluppavano applicazioni con un ciclo di rilascio da 6 mesi a 1 anno; adesso la moda è 15/30 giorni. Questo tipo di rilasci permette ai clienti di capire se stiamo realizzando davvero il software di cui hanno bisogno, e permette di capirlo &lt;em&gt;prima che sia troppo tardi&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Eliminate Waste&lt;/em&gt; - rilasci frequenti permettono di concentrarsi solo su ciò che serve davvero.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Deliver Fast&lt;/em&gt; - Il nuovo codice viene rilasciato al cliente ad intervalli regolari.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;customer-partecipation&quot;&gt;Customer Partecipation&lt;/h3&gt;

&lt;p&gt;In passato il cliente veniva coinvolto solo per le specifiche, a inizio progetto, e poi ci si vedeva alla fine per mostrare il risultato. E lì sentivi frasi “ma non era quello che volevo” 😫&lt;/p&gt;

&lt;p&gt;Usando un approccio &lt;em&gt;Lean&lt;/em&gt; invece il cliente fa parte del team. E’ il cliente a fornire i requisiti, a prioritizzarli, e ad accettarli a fine iterazione.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Principi Lean rispettati&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Create Knowledge&lt;/em&gt; - Attraverso la collaborazione col cliente, i requisiti vengono determinati prima e meglio.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Defer Commitment&lt;/em&gt; - Siccome il cliente è coinvolto nel processo, è possibile prendere le decisioni architetturali solo quando servono.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lean-è-uguale-o-diverso-da-agile&quot;&gt;Lean è uguale o diverso da Agile?&lt;/h2&gt;

&lt;p&gt;Chi ha fatto un po’ di Agile starà ora dicendo: “Ma tutte queste cose le facciamo anche noi!”. Già! Dov’è la differenza?&lt;/p&gt;

&lt;p&gt;Le differenze sono sostanzialmente due: &lt;em&gt;scope&lt;/em&gt; e &lt;em&gt;focus&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Agile&lt;/strong&gt; lo scopo è di migliorare lo sviluppo del software e si focalizza sull’adattabilità e sul rilascio veloce. Oppure, come piace dire a me, si parte dalla filosofia e si trovano i mezzi per metterla in pratica.&lt;/p&gt;

&lt;p&gt;Nell’approccio &lt;strong&gt;Lean&lt;/strong&gt; invece si guarda al quadro generale, e ci si focalizza più sulle pratiche (che sono il punto di partenza!) che sulla filosofia. Infatti &lt;strong&gt;non è obbligatorio mettere in pratica contemporaneamente tutte le pratiche&lt;/strong&gt;, si può tranquillamente iniziare a integrarle una alla volta; e soprattutto, si può seguire qualsiasi tipo di metodologia ma usare le pratiche &lt;em&gt;Lean&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Per questo, &lt;strong&gt;negli ultimi team con cui ho collaborato&lt;/strong&gt;, piuttosto che mettere insieme tutte le cerimonie di Scrum &lt;strong&gt;ho preferito privilegiare quelle pratiche che sicuramente avrebbero portato un valore effettivo&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Non avrei conosciuto le pratiche Lean senza Agile. &lt;strong&gt;Non potrei fare Agile senza mettere in pratica i principi Lean. Al contrario, si può essere Lean senza essere Agile&lt;/strong&gt;. Questi due mondi si sovrappongono per molte cose e sono, alla fine della fiera, &lt;strong&gt;complementari tra loro&lt;/strong&gt;.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="agile" /><category term="Lean" /><category term="scrum" /><category term="metodologie" /><summary type="html">Agile, agile, agile… ormai tutti fanno Agile, implementando un framework tipo Scrum (che è uno dei possibili modi di essere Agile).</summary></entry><entry><title type="html">“Vorrei, ma ho paura che vada male” &amp;amp;#58 come assumersi dei “rischi intelligenti”</title><link href="https://michelenasti.com/2017/04/21/vorrei-ma-ho-paura-che-vada-male-come-assumersi-dei-rischi-intelligenti.html" rel="alternate" type="text/html" title="&quot;Vorrei, ma ho paura che vada male&quot;	&amp;#58 come assumersi dei &quot;rischi intelligenti&quot;" /><published>2017-04-21T00:00:00+02:00</published><updated>2017-04-21T11:14:29+02:00</updated><id>https://michelenasti.com/2017/04/21/vorrei-ma-ho-paura-che-vada-male-come-assumersi-dei-rischi-intelligenti</id><content type="html" xml:base="https://michelenasti.com/2017/04/21/vorrei-ma-ho-paura-che-vada-male-come-assumersi-dei-rischi-intelligenti.html">&lt;p&gt;Oggi vorrei parlarvi di &lt;strong&gt;come assumersi dei rischi intelligenti&lt;/strong&gt;. Intelligenti in che senso?!&lt;/p&gt;

&lt;p&gt;Questo post ce l’ho in testa da molto tempo, almeno da quando ho letto il libro &lt;a href=&quot;http://amzn.to/2oaDAB6&quot;&gt;Startup Of You&lt;/a&gt; di Reid Hoffman (fondatore di LinkedIn) e Ben Casnocha. Per i duri di comprendorio inglese qui c’è la &lt;a href=&quot;http://amzn.to/2oQsY92&quot;&gt;versione in Italiano&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nel libro gli autori spiegano cosa si può fare per &lt;strong&gt;conferire alla propria vita e alla propria carriera un atteggiamento “da startup”&lt;/strong&gt;: ci sono una lunga serie di consigli, discussioni, esempi, e insomma è uno dei libri che ho letto con più piacere.&lt;img src=&quot;/images/rischio-investimenti-definizione-749x400.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;i-rischi-intelligenti&quot;&gt;I rischi intelligenti&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Siamo abituati a pensare ai rischi come qualcosa di negativo&lt;/em&gt;: perdite di denaro sui mercati azionari, o guida di una moto senza casco. Ma il rischio non è un nemico; è qualcosa che fa intrinsecamente parte della nostra vita.&lt;/p&gt;

&lt;p&gt;Le situazioni rischiose, comunque, sono quelle in cui la possibilità che le cose vadano male è decisamente più alto del vantaggio che si ottiene se le cose vanno bene.&lt;/p&gt;

&lt;p&gt;Ad esempio, &lt;strong&gt;volare in aereo non è rischioso&lt;/strong&gt;, perché anche se lo scenario peggiore è &lt;em&gt;molto **doloroso&lt;/em&gt; la possibilità che questo accada è bassissima. Invece, il tempo di viaggio risparmiato è un dato di fatto.&lt;/p&gt;

&lt;p&gt;Alcuni imprenditori sono dei cowboy del rischio; tuttavia, &lt;strong&gt;ciò che distingue un imprenditore giudizioso da un semplice spavaldo non è l’alta tolleranza al rischio, ma l’abilità di saperlo valutare e gestire correttamente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Il rischio, in un contesto come quello del lavoro, è correlato alle scelte che facciamo, e alla possibilità che qualcosa vada storto. Ad esempio, quando cambiamo lavoro, ci assumiamo il rischio che il nuovo possa essere anche peggiore del vecchio, e invochiamo tutte le divinità affinché non sia così!&lt;/p&gt;

&lt;p&gt;Ma non solo tutto ciò che facciamo comporta rischi; &lt;strong&gt;anche&lt;/strong&gt; &lt;strong&gt;ciò che NON facciamo è altamente rischioso&lt;/strong&gt;. Questo vale specialmente quando il mondo intorno a noi sta cambiando e richiede un nostro adattamento.&lt;/p&gt;

&lt;h2 id=&quot;valutare-i-rischi&quot;&gt;Valutare i rischi&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Valutare i rischi è difficile, ma non impossibile. Gli imprenditori lo fanno tutti i giorni.&lt;/strong&gt; Tuttavia, essi non usano analisi matematiche o economiche (degne di Wall Street!) per prendere decisioni; sinceramente, non dovremmo farlo neanche noi.&lt;/p&gt;

&lt;p&gt;Ecco alcuni princìpi guida:&lt;/p&gt;

&lt;h3 id=&quot;1-stiamo-esagerando-nella-valutazione&quot;&gt;1. stiamo esagerando nella valutazione?&lt;/h3&gt;

&lt;p&gt;Il primo passo nella valutazione di un rischio è ricordarsi che &lt;strong&gt;il caso peggiore probabilmente non è così brutto, o così probabile, come sembra&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;2-il-caso-peggiore-è-tollerabile&quot;&gt;2. Il caso peggiore è tollerabile?&lt;/h3&gt;

&lt;p&gt;Se accade il caso peggiore cosa succede alla nostra vita? La reputazione scenderà a livelli sotto zero, perderemo tutti i soldi, la carriera sarà definitivamente finita?&lt;/p&gt;

&lt;p&gt;Se nel caso peggiore accade che perdiamo &lt;em&gt;un po’&lt;/em&gt; di soldi, o veniamo licenziati (posto che riusciamo a trovare un altro lavoro subito), o rischi semplicemente di sentirti inadeguato, &lt;strong&gt;dovresti comunque provarci&lt;/strong&gt;. Almeno finché hai un &lt;a href=&quot;https://michelenasti.com/2015/11/serve-un-piano/&quot;&gt;solido Piano Z&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;3-puoi-cambiare-la-decisione-a-metà-dellopera-puoi-passare-al-piano-b&quot;&gt;3. Puoi cambiare la decisione a metà dell’opera? Puoi passare al piano B?&lt;/h3&gt;

&lt;p&gt;Quando vediamo che le cose si stanno mettendo male, possiamo fare delle scelte che ti permettono di tornare indietro e ricominciare?&lt;/p&gt;

&lt;h3 id=&quot;4-non-confondiamo-lincertezza-con-il-rischio&quot;&gt;4. Non confondiamo l’incertezza con il rischio&lt;/h3&gt;

&lt;p&gt;Nessuno può sapere come andrà prima del tempo. Ma questo non significa che l’incertezza sia un rischio! &lt;strong&gt;Le opportunità migliori sono quelle con i più grandi punti interrogativi&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;5-considera-la-tua-età-e-a-che-fase-della-tua-vita-ti-trovi-quali-saranno-i-rischi-tra-un-paio-danni&quot;&gt;5. Considera la tua età e a che fase della tua vita ti trovi. Quali saranno i rischi tra un paio d’anni?&lt;/h3&gt;

&lt;p&gt;Fallire da ragazzi è considerato formativo; è per questo che sono i ventenni a fondare le aziende più strampalate.&lt;/p&gt;

&lt;p&gt;Man mano che invecchi, la tua percezione del rischio cambia. Arrivano i bambini, la casa, l’auto, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Meglio fare qualcosa di rischioso prima che sia troppo tardi&lt;/strong&gt; ;)&lt;/p&gt;

&lt;h2 id=&quot;facciamo-un-rapido-test&quot;&gt;Facciamo un rapido test…&lt;/h2&gt;

&lt;p&gt;Prendetevi 30 secondi per ogni punto sottostante. Provate a immaginare i pro e i contro delle seguenti situazioni. Considerati i cinque punti espressi precedentemente, come cambierebbe la tua vita se:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;trovi un lavoro fantastico e strapagato ma è negli USA&lt;/li&gt;
  &lt;li&gt;la tua azienda smette di pagare gli stipendi&lt;/li&gt;
  &lt;li&gt;inizi a dirigere un team&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Questo semplice esercizio mentale magari vi farà riflettere su come percepite il rischio; nel mio caso mi ha aiutato a fare scelte più consapevoli nel mondo del lavoro.&lt;/p&gt;

&lt;p&gt;In bocca al rischio ;)&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="rischi" /><category term="lavoro" /><category term="startup of you" /><summary type="html">Oggi vorrei parlarvi di come assumersi dei rischi intelligenti. Intelligenti in che senso?!</summary></entry><entry><title type="html">Diventare Senior™ con Javascript: le funzioni filter, map, reduce</title><link href="https://michelenasti.com/2017/04/14/javascript-filter-map-reduce.html" rel="alternate" type="text/html" title="Diventare Senior™ con Javascript: le funzioni filter, map, reduce" /><published>2017-04-14T10:09:00+02:00</published><updated>2017-04-14T14:56:46+02:00</updated><id>https://michelenasti.com/2017/04/14/javascript-filter-map-reduce</id><content type="html" xml:base="https://michelenasti.com/2017/04/14/javascript-filter-map-reduce.html">&lt;p&gt;Si può lavorare per anni con javascript senza mai arrivare a conoscere tre funzioni fantastiche (e standard) che permettono di scrivere codice veloce e testabile.&lt;/p&gt;

&lt;p&gt;E’ vero che si diventa senior principalmente con l’esperienza, ma se dite di aver lavorato per 3+ anni con JS dovete anche mostrare che avete un’&lt;em&gt;esperienza di un certo livello&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aprite la console del browser e provate gli esempi!&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-partire-da-un-array-come-filtriamo-solo-gli-elementi-pari-senza-usare-il-ciclo-for&quot;&gt;A partire da un array, come filtriamo solo gli elementi pari senza usare il ciclo for?&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filtered&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter()&lt;/code&gt; prende in input una funzione di &lt;em&gt;test&lt;/em&gt; che viene eseguita su ogni elemento dell’input: se la funzione restituisce &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;elem&lt;/code&gt; viene aggiunto all’array in output.&lt;/p&gt;

&lt;h3 id=&quot;come-raddoppiamo-tutti-gli-element-di-un-array-senza-usare-il-ciclo-for&quot;&gt;Come raddoppiamo tutti gli element di un array senza usare il ciclo for?&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mapped&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Anche qui la funzione &lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt; prende in input una funzione che viene eseguita su ogni elemento dell’input. Per ogni elemento, questo viene &lt;em&gt;trasformato&lt;/em&gt; in un altro valore in base al risultato della funzione.&lt;/p&gt;

&lt;h3 id=&quot;come-sommiamo-tutti-gli-elementi-di-un-array-senza-usare-il-ciclo-for&quot;&gt;Come sommiamo tutti gli elementi di un array senza usare il ciclo for?&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reduced&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduced&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reduce()&lt;/code&gt; è più complessa da spiegare, ma poi sarà facilissima da usare: permette di applicare una funzione &lt;em&gt;N-a-1&lt;/em&gt; dove da un array tiriamo fuori un unico risultato. Nel nostro esempio abbiamo applicato la somma (voi come esercizio potreste provare a tirare fuori la media!).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reduce()&lt;/code&gt; prende in input due elementi: una funzione e un elemento di partenza (Sarebbe lo &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; specificato in fondo). Per capire cosa accade, facciamo un esempio sull’array &lt;code class=&quot;highlighter-rouge&quot;&gt;[8, 7]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alla prima iterazione viene chiamata la funzione con &lt;code class=&quot;highlighter-rouge&quot;&gt;prev = 0&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;elem = 8&lt;/code&gt;: siccome stiamo iterando sul primo elemento e non c’è nessun elemento precedente, viene usato il secondo argomento di &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt; come valore di inizio (ricordate quello &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; lì in fondo?). A questo punto viene eseguita la somma, che è &lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alla seconda iterazione, la funzione viene chiamata con &lt;code class=&quot;highlighter-rouge&quot;&gt;prev = 8&lt;/code&gt; (risultato dell’iterazione precedente!) e &lt;code class=&quot;highlighter-rouge&quot;&gt;elem = 7&lt;/code&gt;:  Anche in questo caso verrà eseguita la somma che è &lt;code class=&quot;highlighter-rouge&quot;&gt;15&lt;/code&gt;, che sarà anche l’output di &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;domanda-implicita-del-lettore-perchè-tutto-staccanimento-contro-il-ciclo-for&quot;&gt;(Domanda implicita del lettore: Perchè tutto st’accanimento contro il ciclo for?)&lt;/h3&gt;
&lt;p&gt;Il ciclo for è un ottimo costrutto per iterare gli array, tuttavia non fa capire a chi legge cosa sta accadendo, oltre al fatto di non essere manutenibile. e componibile.&lt;/p&gt;

&lt;p&gt;Supponiamo di voler filtrare tutti i numeri pari da un array; successivamente raddoppiarli e poi sommarli (ossia, la composizione delle tre domande precedenti).&lt;/p&gt;

&lt;p&gt;Con le funzioni presentate prima, ecco la soluzione:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;E’ ovvio che si può scrivere anche con un bel (paio di) for. Ma quante righe ci vogliono? e rileggendolo dopo sei mesi, si capisce?&lt;/p&gt;

&lt;p&gt;Per concludere, con la svolta funzionale di altri linguaggi (chi ha detto Java?!) questi concetti sono stati applicati anche altrove, proprio per la loro semplicità e componibilità. Magari hanno altri nomi, ma il funzionamento è lo stesso. Cercateli e …usateli!&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="javascript" /><category term="filter" /><category term="map" /><category term="reduce" /><summary type="html">Si può lavorare per anni con javascript senza mai arrivare a conoscere tre funzioni fantastiche (e standard) che permettono di scrivere codice veloce e testabile.</summary></entry></feed>