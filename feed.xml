<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.0">Jekyll</generator><link href="https://michelenasti.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://michelenasti.com/" rel="alternate" type="text/html" /><updated>2018-01-12T09:50:15+01:00</updated><id>https://michelenasti.com/</id><title type="html">Michele Nasti’s blog</title><subtitle>I'm a full stack Developer with an eye for the web.</subtitle><entry><title type="html">I trend Javascript del 2018</title><link href="https://michelenasti.com/2018/01/09/i-trend-javascript-del-2018.html" rel="alternate" type="text/html" title="I trend Javascript del 2018" /><published>2018-01-09T01:00:00+01:00</published><updated>2018-01-10T18:49:50+01:00</updated><id>https://michelenasti.com/2018/01/09/i-trend-javascript-del-2018</id><content type="html" xml:base="https://michelenasti.com/2018/01/09/i-trend-javascript-del-2018.html">&lt;p&gt;&lt;strong&gt;Quali sono le “cose” da tenere maggiormente d’occhio nello sviluppo JavaScript nel 2018?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ci sono alcuni trend che si sono sviluppati verso la fine del 2017 e che dovranno necessariamente essere inseguiti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/trends.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Async/await&lt;/strong&gt;:  praticamente l’aggiunta più utile al linguaggio da qualche anno a questa parte; ora è possibile programmare in asincrono con estrema  facilità. Da studiare obbligatoriamente&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Webpack&lt;/strong&gt;, &lt;strong&gt;rollup, parcel, etc.&lt;/strong&gt;:  i bundler stanno diventando il nuovo terreno di sfida, specialmente nel frontend. Capire come funzionano, come estenderli e come usarli per le  proprie esigenze darà sicuramente un vantaggio competitivo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Typescript&lt;/strong&gt;:  i tipi statici sono una manna dal cielo, permettono di fare refactoring  molto più rapidamente. Impararlo è molto semplice e la sfida sarà  usarlo su NodeJS e sugli altri framework (react, vue…)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt; &lt;strong&gt;(frontend, backend)&lt;/strong&gt;:  c’è troppo poco testing js in giro. Manca il test del frontend, manca  il test del backend. Inoltre esistono decine di framework di testing  differenti che si danno battaglia. Di sicuro, per un linguaggio  dinamico, il testing diventa essenziale se vuoi costruire applicazioni  grosse.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modularizzazione (Frontend) /Microservizi&lt;/strong&gt; &lt;strong&gt;(backend)&lt;/strong&gt;:  questo vale per tutti i linguaggi: il trend del momento è realizzare  microservizi che lavorano insieme. Capire come strutturare applicazioni  di questo tipo diventa fondamentale per uno stack moderno.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;VueJS (frontend)&lt;/strong&gt;:  in un mondo dominato da Angular e React, Vue si propone come una delle  tante alternative, di sicuro quella che ha attirato più consensi. Io  personalmente lo conosco e lo uso con piacere.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;: è  un’alternativa a REST che permette di semplificare il modo di  richiedere i dati a un server. I big l’hanno già scelto, per  l’enterprise invece c’è ancora tanto da fare.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Buono studio!&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="michele risponde" /><category term="javascript" /><category term="trends" /><category term="typescript" /><category term="webpack" /><category term="async await" /><category term="vuejs" /><category term="graphql" /><summary type="html">Quali sono le “cose” da tenere maggiormente d’occhio nello sviluppo JavaScript nel 2018?</summary></entry><entry><title type="html">E’ importante conoscere come sono fatte le librerie che usiamo?</title><link href="https://michelenasti.com/2018/01/07/e-importante-conoscere-come-sono-fatte-le-librerie-che-usiamo.html" rel="alternate" type="text/html" title="E' importante conoscere come sono fatte le librerie che usiamo?" /><published>2018-01-07T01:00:00+01:00</published><updated>2018-01-07T17:55:56+01:00</updated><id>https://michelenasti.com/2018/01/07/e-importante-conoscere-come-sono-fatte-le-librerie-che-usiamo</id><content type="html" xml:base="https://michelenasti.com/2018/01/07/e-importante-conoscere-come-sono-fatte-le-librerie-che-usiamo.html">&lt;p&gt;Domanda:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;fin dal primo giorno, alla facoltà di Ingegneria Informatica mi è stata inculcata un’idea che tutt’ora fatico ad accettare. Visto che ci sono infinite librerie che ti rendono disponibili delle funzioni avanzate, il tuo lavoro principale non è riscrivere quelle funzioni, ma saperle  usare e adattare per i tuoi scopi. Faccio un esempio stupido: una  libreria python per l’elaborazione di file pdf. Due righe e posso copiare, fondere, togliere pagine. &lt;strong&gt;Però non saprò mai come funziona.&lt;/strong&gt; &lt;strong&gt;E  questa cosa mi angoscia tantissimo.&lt;/strong&gt; Nel senso, posso aprire la libreria e  andarmele a leggere, ovviamente. Ma passerei probabilmente ore a capire il loro funzionamento. Sono l’unico che è turbato da questa cosa? Chiaramente mi riferisco a chi sta ancora studiando, come me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Risposta:&lt;/p&gt;

&lt;p&gt;Nel thread originale, su facebook, ho risposto che &lt;strong&gt;da studente non c’è niente di meglio che provare a rifare quelle librerie proprio per capire come sono state fatte.&lt;/strong&gt; All’università sono felice di aver reimplementato tutte le strutture dati, perchè ora le uso con cognizione di causa.&lt;/p&gt;

&lt;p&gt;Un altro esempio: quando ho iniziato a studiare NodeJS, sentivo la mancanza di una libreria di logging come Log4J in Java. Una delle prime cose che ho fatto è stata di scrivermene una mia, che ovviamente faceva schifo ed era pure piena di bug, ma che mi ha aiutato a imparare meglio proprio NodeJS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rinventare-la-ruota.jpg&quot; alt=&quot;&quot; /&gt;&lt;strong&gt;Nel mondo del lavoro vero c’è una discriminante: il tempo.&lt;/strong&gt; Gli studenti scopriranno prima o poi che ogni giorno di lavoro in più equivale a molti soldi spesi dall’azienda, quindi meno tempo si impiega meglio è. E questo impone che &lt;strong&gt;non si può reinventare la ruota,&lt;/strong&gt; non si può riscrivere ogni possibile funzione che abbiamo già disponibile da qualche parte on line. &lt;strong&gt;E’ anche il motivo per cui delle persone si sono inventate i framework&lt;/strong&gt;: &lt;strong&gt;risolvono problemi che altri già hanno avuto&lt;/strong&gt;, risparmiando tutto il tempo necessario a tirare su un progetto.&lt;/p&gt;

&lt;h3 id=&quot;leccezione-che-conferma-la-regola-cosa-ci-insegna-elon-musk&quot;&gt;L’eccezione che conferma la regola: cosa ci insegna Elon Musk&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/Elon_Musk_2015.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ho tirato in ballo un &lt;em&gt;pezzo da 90&lt;/em&gt; e l’ho fatto per un motivo ben preciso. Tesla è un’azienda che produce auto elettriche. Era da una settantina d’anni che non si fondavano nuove case automobilistiche &lt;em&gt;consumer,&lt;/em&gt; e infatti ciò che ha realizzato, rivisto con gli occhi di oggi, sembra comunque una pazzia. Per creare un’auto dal nulla non ha seguito il solito processo che impiegano gli altri costruttori: &lt;strong&gt;ogni singolo pezzo delle Tesla viene prodotto da loro stessi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E ancora: quando ha fondato SpaceX si stava buttando in un settore dominato da poche grandi aziende che avevano formato un oligopolio. Era difficile e dispendioso trovare, tra le tante cose, una base di lancio per poter sperimentare i propri razzi costruiti &lt;em&gt;in-house&lt;/em&gt;, &lt;strong&gt;senza subappaltare nulla&lt;/strong&gt;. Quindi che fa Musk? &lt;strong&gt;Compra un atollo nel Pacifico da cui farà partire tutti i suoi razzi.&lt;/strong&gt; In questo modo non ha dovuto più chiedere nulla a nessuno, e ha velocizzato di molto il processo di realizzazione e sperimentazione.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Musk ha provato a “usare quanto c’era di già fatto”&lt;/em&gt;, sia nel caso di Tesla che di SpaceX, ma a un certo punto si è trovato nella condizione di dipendere troppo da altro e di dover riciclare soluzioni non ottime per il suo contesto. Per Tesla, i motori erano sviluppati per altri tipi di carburanti, le batterie erano pensate per altri sistemi etc. &lt;strong&gt;Riprogettare tutto da zero era l’unica strada percorribile per ottenere il miglior progetto, e soprattutto la miglior execution possibile.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;La lezione che possiamo trarne è che &lt;strong&gt;se dipendiamo in maniera decisa da qualcosa, e questa non ci soddisfa, è il caso che ce la riscriviamo da noi&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Se il &lt;em&gt;core&lt;/em&gt; della tua azienda è, ad esempio, processare pagamenti con le carte di credito, e le attuali soluzioni presenti sul mercato costano troppo o sono lente, è il caso che tu ti scriva il tuo payment processor.&lt;/p&gt;

&lt;p&gt;Sarà lungo e non sarà una passeggiata, ma dopo avrai la miglior soluzione possibile.&lt;/p&gt;

&lt;p&gt;Poi la devi vendere, ma questa è un’altra storia :)&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="michele risponde" /><category term="programmazione" /><category term="elon musk" /><category term="tesla" /><category term="spacex" /><summary type="html">Domanda:</summary></entry><entry><title type="html">Essere programmatori e vivere di progetti propri</title><link href="https://michelenasti.com/2018/01/06/essere-programmatori-e-vivere-di-progetti-propri.html" rel="alternate" type="text/html" title="Essere programmatori e vivere di progetti propri" /><published>2018-01-06T01:00:00+01:00</published><updated>2018-01-06T23:50:26+01:00</updated><id>https://michelenasti.com/2018/01/06/essere-programmatori-e-vivere-di-progetti-propri</id><content type="html" xml:base="https://michelenasti.com/2018/01/06/essere-programmatori-e-vivere-di-progetti-propri.html">&lt;p&gt;Inauguriamo una nuova sezione, ossia “Michele risponde” :)&lt;/p&gt;

&lt;p&gt;Mi capita spesso di rispondere a domande su gruppi facebook o nei forum, tanto vale appuntarsele anche qua.&lt;/p&gt;

&lt;p&gt;Mi prendo la libertà di modificare un po’ le domande se sono lunghe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domanda:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[…] Salve ragazzi, forse oggi andrò un po’ OT, perché vorrei chiedervi un consiglio più a livello personale che tecnico.&lt;br /&gt;
Sono un ragazzo di 17 anni e da un anno a questa parte mi sono buttato  sull’informatica perché lo trovo un settore abbastanza meritocratico,  perciò in questo anno ho imparato i linguaggi per creare grafiche di  pagine web (html;css) e ho iniziato un progetto che fino ad ora va bene.&lt;br /&gt;
In questi mesi ho pensato molto a come muovermi ed ampliare le mie  conoscenze, e dopo vari ripensamenti, per questo negli ultimi tempi ho  deciso di imparare C (un linguaggio che opera strettamente “vicino”  all’hardware, per imparare le fondamentali logiche e operazioni dei  computer)&lt;br /&gt;
Premetto che io non voglio aumentare le mie skills per poi  assicurarmi un posto di lavoro, perché non vorrei diventare un  dipendente, ma sviluppare in proprio i miei progetti e magari, perché  no, un giorno viverne di essi .&lt;br /&gt;
Ora arriviamo al punto, sto  imparando C, forte solo di una ottima/discreta base di matematica, sono arrivato a trattare argomenti quali puntatori e strutture dati, però spesso penso che ha una applicazione, non so da dove partire, cioè per intenderci, io imparo le nozioni per definirmi anche un buon/discreto conoscitore di, ma una volta apprese quelle, non so da dove partire per sviluppare qualche mio programma in proprio, pecco di ispirazione e mi scoraggio e tra me e me penso “per quale motivo stai imparando il C se non  hai nessun fine/scopo o anche idea di applicazione?”&lt;br /&gt;
Io ora chiedo se a qualcuno di voi sia già capitata una cosa del genere, come vi siete mossi, quale settore dell’informatica può essere un potenziale, un  fondamento da cui poter costruire qualcosa, insomma una fonta di  ispirazione per iniziare a mettersi in proprio.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Risposta:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Uhm.  Ci vedo due cose distinte. Imparando il C diventi un ottimo tecnico: si può vivere già di quello, magari lavorando per altri. Questo da solo è un ottimo piano B da mettere in pratica finchè non hai idee che ti prendono al100%.&lt;/p&gt;

&lt;p&gt;Tu però hai altre ambizioni, ossia realizzare i tuoi progetti e vivere di quello. E ti mancano i progetti. Come tirarli fuori?&lt;br /&gt;
La  cosa più semplice che mi viene da consigliarti é di creare software che risolve i tuoi problemi. &lt;em&gt;Esempio di problema&lt;/em&gt;: quando tira il vento forte nel paese in cui  vivo, questo mi distrugge il giardino. S_oluzione_: ho  scritto un programma che mi avvisa quando sta per arrivare quel tipo di  vento.&lt;/p&gt;

&lt;p&gt;Io non ho inventato nulla, le App per  il meteo esistono da sempre; ma avevo un’esigenza particolare e nessuna app all’epoca me la risolveva, così ho inventato la mia soluzione. Magari serve anche ad altri? Girando un pò per la rete devi essere bravo e fortunato a trovare qualcuno disposto a pagare per i tuoi software.&lt;/p&gt;

&lt;p&gt;E  qui viene la parte &lt;strong&gt;difficile&lt;/strong&gt;: farsi pagare é una delle cose più difficili in assoluto. Che sia 1€ o 10000€, il furbo che “ci prova” lo  trovi sempre. Alcuni dicono che mettersi in proprio é difficile proprio  perché bisogna continuamente trovare clienti, lavorare per loro, e  &lt;strong&gt;perdere una quantità di tempo immane per farsi pagare&lt;/strong&gt;…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/Best Money Making Computer Fields.jpg&quot; alt=&quot;&quot; title=&quot;people won't throw money at you&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E  per finire: l’informatica (a livello di tecnici) non é meritocratica. Va avanti non il più bravo (tranne forse in Mozilla e in Google) ma chi da meno problemi al boss, ossia quello di cui ci si può fidare. Questo l’ho appreso sulla mia pelle dopo qualche anno di esperienza, e ovviamente vale in contesti aziendali. Nel momento in cui avrai tu un’azienda coi tuoi fantastici software, chi promuoverai come “capo team”? il più bravo a organizzare il gruppo, o il più bravo tecnico che hai? Scoprirai che le due figure di solito non coincidono.&lt;/p&gt;

&lt;p&gt;Un ultimo consiglio, che do sempre a chi vuole organizzare qualcosa in proprio: partecipa a uno &lt;a href=&quot;https://www.google.it/search?q=startup+weekend+italia&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;client=firefox-b-ab&amp;amp;gfe_rd=cr&amp;amp;dcr=0&amp;amp;ei=1FBRWoqRCqHBXvOUqYgG&quot;&gt;Startup Weekend&lt;/a&gt;. Ne organizziamo uno anche a Salerno, anche se ancora non abbiamo una data certa. Lì troverai tutto ciò che cerchi: persone che vogliono fondare la loro azienda, idee innovative, e come realizzarle dal punto di vista pratico (validazione, business plan, analisi dei competitor, stima dei tempi, etc.)&lt;/p&gt;

&lt;p&gt;In bocca al lupo!&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="michele risponde" /><category term="lavoro" /><category term="informatico" /><category term="programmatore" /><summary type="html">Inauguriamo una nuova sezione, ossia “Michele risponde” :)</summary></entry><entry><title type="html">VueJS basics</title><link href="https://michelenasti.com/2017/12/17/vuejs-basics.html" rel="alternate" type="text/html" title="VueJS basics" /><published>2017-12-17T01:00:00+01:00</published><updated>2017-12-18T12:40:27+01:00</updated><id>https://michelenasti.com/2017/12/17/vuejs-basics</id><content type="html" xml:base="https://michelenasti.com/2017/12/17/vuejs-basics.html">&lt;p&gt;It has been a long week for me, I’m studying very hard VueJS - this time by coding real examples - and I confirm that there are some very good concepts backed in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/vuejs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;separation-of-data-and-methods&quot;&gt;Separation of data and methods&lt;/h2&gt;

&lt;p&gt;This is a basic html containing some VueJS markup:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;html&amp;gt;
  ...
  &amp;lt;body&amp;gt;
  	&amp;lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&amp;gt;&amp;lt;/script&amp;gt;
  	&amp;lt;div id=&quot;app&quot;&amp;gt;
  	  &amp;lt;h2&amp;gt;{{ message }}&amp;lt;/h2&amp;gt;
      &amp;lt;p&amp;gt;{{ sayHelloTo(name) }}&amp;lt;/p&amp;gt;
  	&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a basic VueJS element:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;new Vue({
  el: '#app',
  data: {
    message: 'Hello from Vue!',
    name: 'Michele'
  },
  methods: {
    sayHelloTo: function(name) {
      return `Hello, ${this.name}!`
    }
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s describe this snippet:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the &lt;code&gt;el&lt;/code&gt; references the DOM element with the &lt;code&gt;#app&lt;/code&gt; id. This element will be _Vue_zed.&lt;/li&gt;
  &lt;li&gt;the &lt;code&gt;data&lt;/code&gt; object contains the data that can be used inside the HTML: for example, we used the &lt;code&gt;message&lt;/code&gt; property in the Html.&lt;/li&gt;
  &lt;li&gt;the &lt;code&gt;methods&lt;/code&gt; property contains the methods you can use in your html. These are useful for calculations or for actions, like clicking on a button.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I acutally like a lot: a clear separations of data and methods.&lt;/p&gt;

&lt;p&gt;This is a concept that comes from the &lt;strong&gt;functional programming world&lt;/strong&gt;, that is, separate the data from the functions that interact with this data.&lt;/p&gt;

&lt;p&gt;However, Vue is not &lt;em&gt;functional&lt;/em&gt; in the classic sense of the definition, because you use the &lt;code&gt;this&lt;/code&gt; keyword to access data &amp;amp; you’re not forced to write pure functions, etc etc.&lt;/p&gt;

&lt;h2 id=&quot;a-word-on-this&quot;&gt;A word on this&lt;/h2&gt;

&lt;p&gt;Have you noticed that from the &lt;code&gt;methods&lt;/code&gt; section,  if you want to access &lt;code&gt;data&lt;/code&gt; properties, you use &lt;code&gt;this&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;In fact, Vue proxies the &lt;code&gt;this&lt;/code&gt; keyword so that you can access to data without writing &lt;code&gt;this.data.message&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, for &lt;code&gt;this&lt;/code&gt; to work you must write 90% of the time the old ES5 &lt;code&gt;function()&lt;/code&gt; declaration: this is expecially clear in VueJS components, an argouments we’ll talk in another post.&lt;/p&gt;</content><author><name>musikele</name></author><category term="vuejs" /><category term="javascript" /><category term="frontend" /><summary type="html">It has been a long week for me, I’m studying very hard VueJS - this time by coding real examples - and I confirm that there are some very good concepts backed in.</summary></entry><entry><title type="html">Dovrei partecipare al programma Erasmus?</title><link href="https://michelenasti.com/2017/12/04/dovrei-partecipare-al-programma-erasmus.html" rel="alternate" type="text/html" title="Dovrei partecipare al programma Erasmus?" /><published>2017-12-04T01:00:00+01:00</published><updated>2017-12-04T17:09:42+01:00</updated><id>https://michelenasti.com/2017/12/04/dovrei-partecipare-al-programma-erasmus</id><content type="html" xml:base="https://michelenasti.com/2017/12/04/dovrei-partecipare-al-programma-erasmus.html">&lt;p&gt;&lt;strong&gt;Anche io ho partecpato al programma Erasmus&lt;/strong&gt;, era il 2006, l’anno dei mondiali e io ero a Siviglia. &lt;em&gt;Non avete idea di quanto sia appagante vincere un mondiale all’estero&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Basandomi sui miei ricordi: prima di partire &lt;strong&gt;hai paura&lt;/strong&gt;, il primo mese che stai lì ti chiedi &lt;strong&gt;ma chi te l’ha fatto fare&lt;/strong&gt; mentre cerchi casa, fai la spesa, ti iscrivi ai corsi; il secondo mese è insieme al primo il più duro, &lt;strong&gt;pensi di aver fatto la cazzata più grande della tua vita&lt;/strong&gt;, non capisci la gente quando parla, non sai cosa fare e dove andare, un po’ ti senti solo se non hai nessuno (e io partii da solo)…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Poi venne fuori la faccia di bronzo&lt;/strong&gt;. Un giorno sentii parlare in italiano in autobus e chiesi “hey, sei Erasmus? ma dove diavolo uscite la sera?”; un altro giorno incontrai degli studenti spagnoli che festeggiavano un’Italian Day con dolci italiani (disgustosi e mai mangiati prima) e in pratica finii a uscirci insieme e a correggergli i compiti, etc etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Il terzo mese inizi a pensare che l’Erasmus è una figata pazzesca&lt;/strong&gt;, il quarto il quinto e il sesto &lt;strong&gt;speri non finisca mai&lt;/strong&gt; e inizi a progettare fughe, rimpatriate, anche se già sai che tante cose dovranno necessariamente finire lì.&lt;/p&gt;

&lt;p&gt;E in  tutto questo c’è che ti lasci con la ragazza o ne trovi una nuova, si conoscono persone di tutto il mondo, si imparano nuove lingue e si girano continenti. &lt;strong&gt;Anche i sentimenti si mettono a dura prova.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dal  punto di vista accademico ho avuto un problemaccio con lo spagnolo andaluso, In pratica i primi tre mesi di corso non ho capito nulla. Io, mai bocciato, in Spagna feci un solo esame su tre preventivati, ma quando tornai in Italia superai quei due esami con 30&amp;amp;lode.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chiunque dovrebbe fare l’Erasmus. Anche chi non va all’università. Specialmente chi è fidanzato/a. Specialmente chi ha paura.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutti.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Quest’articolo era, in principio, un commento a un post su facebook. In bocca al lupo a tutti quelli che parteciperanno al programma.&lt;/em&gt;&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="erasmus" /><category term="studio" /><category term="life" /><category term="università" /><summary type="html">Anche io ho partecpato al programma Erasmus, era il 2006, l’anno dei mondiali e io ero a Siviglia. Non avete idea di quanto sia appagante vincere un mondiale all’estero.</summary></entry><entry><title type="html">Alla scoperta di VueJS</title><link href="https://michelenasti.com/2017/12/03/alla-scoperta-di-vue-js.html" rel="alternate" type="text/html" title="Alla scoperta di VueJS" /><published>2017-12-03T01:00:00+01:00</published><updated>2017-12-04T23:24:55+01:00</updated><id>https://michelenasti.com/2017/12/03/alla-scoperta-di-vue-js</id><content type="html" xml:base="https://michelenasti.com/2017/12/03/alla-scoperta-di-vue-js.html">&lt;p&gt;E’ domenica, il Napoli non gioca, che fare? Dopo aver acceso il camino ho iniziato a guardarmi un po’ di VueJS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/vuejs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;vuejs-un-framework-minore&quot;&gt;VueJS, Un framework minore?&lt;/h2&gt;

&lt;p&gt;In questo mondo dominato da Angular e React, c’è ancora spazio per altri framework frontend?&lt;/p&gt;

&lt;p&gt;Ti faccio un’altra domanda: quando ai suoi tempi c’era &lt;em&gt;solo&lt;/em&gt; JQuery, riuscivi a pensare che sarebbe mai nata un’altra libreria per il frontend?&lt;/p&gt;

&lt;p&gt;Penso di aver sentito parlare la prima volta di Vue che c’era &lt;em&gt;solo&lt;/em&gt; Angular 1 in giro, e tutti gli altri framework sgomitavano per diventare famosi. C’è chi ce l’ha fatta, tipo React, e chi invece ci prova ancora e non ci riesce, tipo Ember.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La differenza, molto spesso, la fa l’azienda che sponsorizza&lt;/strong&gt;: Google per Angular, e Facebook per React.&lt;/p&gt;

&lt;p&gt;Nel caso di Vue, le aziende sponsorizzatrici non sono proprio dei nomi di primo piano: &lt;a href=&quot;https://stdlib.com/&quot; title=&quot;StdLib&quot;&gt;StLib&lt;/a&gt;, un’azienda che realizza un framework per codice serverless, &lt;strong&gt;non la conoscevo prima di oggi&lt;/strong&gt;. Quindi, già su questo, partiamo svantaggiati.&lt;/p&gt;

&lt;h2 id=&quot;cosa-mi-ha-colpito-di-vuejs&quot;&gt;Cosa mi ha colpito di VueJS&lt;/h2&gt;

&lt;p&gt;L’approccio di VueJS è molto semplice, e questo è uno dei principali punti di forza:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;non c’è bisogno di partire da un boilerplate&lt;/strong&gt;, ma basta un file html linkato a uno script js;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;non c’è bisogno di conoscere la programmazione super avanzata&lt;/strong&gt;, ma bastano le conoscenze di un normale programmatore;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Somiglia in tutto e per tutto al primo angular&lt;/strong&gt;, quello che ho imparato a conoscere dannatamente e bene, e che funzionava alla grande;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;la documentazione è chiarissima&lt;/strong&gt; e sin dall’inizio si entra nel vivo di VueJS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Non mi sono ancora addentrato molto, ma ho notato che il sistema dei componenti è semplicissimo e soprattutto &lt;strong&gt;si può iniziare a lavorare senza mettere in mezzo i vari webpack&lt;/strong&gt;, systemjs, browserify e compagnia cantando.&lt;/p&gt;

&lt;p&gt;A questo punto una domanda me la sono fatta anch’io:&lt;/p&gt;

&lt;h2 id=&quot;vuejs-è-un-framework-moderno&quot;&gt;VueJS è un framework moderno?&lt;/h2&gt;

&lt;p&gt;Nel senso, ha quelle caratteristiche di un &lt;strong&gt;framework post-angular1&lt;/strong&gt; (utilizzo di un virtual dom, utilizzo di paradigmi reactive, server-side rendering…)  ?&lt;/p&gt;

&lt;p&gt;Il team di Vue ha scritto un’analisi tecnica molto profonda di Vue vs ogni-altra libreria-frontend sul mercato, soffermandosi specialmente su React perchè è quella cui somiglia di più. La velocità non deve essere presa in considerazione come fattore determinante, perchè Vue e React hanno numeri molto simili; quello che cambia è in dettagli come la curva di apprendimento, cosa accade all’intera applicazione un componente si aggiorna, etc.&lt;/p&gt;

&lt;p&gt;Questo vuol dire che si, &lt;strong&gt;Vue è una libreria frontend che si occupa solo della view&lt;/strong&gt;, lasciando ad altre librerie il compito del routing o di altre cose belle (autenticazione, autorizzazione, chiamate http…).&lt;/p&gt;

&lt;h2 id=&quot;sono-solo-allinizio&quot;&gt;Sono solo all’inizio&lt;/h2&gt;

&lt;p&gt;A parte il primo tutorial, che mi ha lasciato un’ottima impressione, c’è ancora tanto da guardare. Vorrei provare a sviluppare qualcosa di meno semplice così da farmi un’idea di come funziona quando le linee di codice aumentano. Resisterà VueJS alla prova della complessità?&lt;/p&gt;

&lt;p&gt;Nei prossimi articoli proverò ad entrare più nel dettaglio di come funziona Vue. Keep reading!&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="vuejs" /><category term="javascript" /><category term="frontend" /><category term="angular" /><category term="react" /><category term="vue" /><summary type="html">E’ domenica, il Napoli non gioca, che fare? Dopo aver acceso il camino ho iniziato a guardarmi un po’ di VueJS.</summary></entry><entry><title type="html">Batman ha ispirato il … Comic Sans: storia di un Font che tutti odiano</title><link href="https://michelenasti.com/2017/12/01/batman-ha-ispirato-il-comic-sans-storia-di-un-font-che-tutti-odiano.html" rel="alternate" type="text/html" title="Batman ha ispirato il ... Comic Sans: storia di un Font che tutti odiano" /><published>2017-12-01T01:00:00+01:00</published><updated>2017-12-01T11:58:52+01:00</updated><id>https://michelenasti.com/2017/12/01/batman-ha-ispirato-il-comic-sans-storia-di-un-font-che-tutti-odiano</id><content type="html" xml:base="https://michelenasti.com/2017/12/01/batman-ha-ispirato-il-comic-sans-storia-di-un-font-che-tutti-odiano.html">&lt;p&gt;La storia che sto per raccontare riguarda uno degli aspetti più &lt;em&gt;mitologici&lt;/em&gt; dell’informatica intera: il &lt;strong&gt;Comic Sans&lt;/strong&gt;, il carattere più odiato in assoluto, ma allo stesso tempo uno dei più usati al mondo.&lt;/p&gt;

&lt;h2 id=&quot;linizio-microsoft-bob&quot;&gt;L’inizio: Microsoft Bob&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://it.wikipedia.org/wiki/Microsoft_Bob&quot; title=&quot;Microsoft Bob&quot;&gt;Microsoft Bob&lt;/a&gt; meriterebbe un articolo a parte, in quanto fu uno dei primi progetti di Microsoft gestiti direttamente da Melinda Gates (la moglie di Bill) e, contemporaneamente, uno dei progetti più fallimentari.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bobhome1p.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L’idea dietro a Bob era di creare un’interfaccia alternativa a Windows 3.1 e Windows 95, un’interfaccia che fosse giocosa, facile da usare per gli utenti che non avevano dimestichezza coi computer, come gli anziani.&lt;/p&gt;

&lt;p&gt;Si navigava all’interno di questo salone di casa, e per leggere un libro si cliccava sul libro, così come per aprire il calendario, etc.&lt;/p&gt;

&lt;p&gt;In fin dei conti l’idea era carina, ma aveva un grande problema: dietro un’interfaccia così giocosa il font utilizzato è un vetusto Times New Roman. brutto eh?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(sono segretamente convinto che sia stato questo il vero motivo dell’insuccesso commerciale.)&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;vincent-connaire-luomo-che-progettò-comic-sans&quot;&gt;Vincent Connaire: l’uomo che progettò Comic Sans&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Vincent_Connare&quot; title=&quot;Vincent Connaire&quot;&gt;Vincent Connaire&lt;/a&gt; è un designer che nel 1993 iniziò a lavorare per Microsoft.&lt;/p&gt;

&lt;p&gt;Connaire entrò subito in contatto col team di Microsoft Bob e fece notare che un’interfaccia così giocosa non poteva avere un font tanto serio, quindi propose di ideare un font più uniforme allo stile comunicativo di Bob.&lt;/p&gt;

&lt;p&gt;L’idea fu inizialmente accettata e Connaire si ispirò ai fumetti che amava di più, tra cui un &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Dark_Knight_Returns&quot; title=&quot;Batman - The dark knight returns&quot;&gt;Batman - The dark knight returns&lt;/a&gt; del 1986 che aveva sulla sua scrivania. I caratteri dei fumetti generalmente vengono disegnati a mano, e fanno parte del processo di creazione. Il processo artigianale che c’è dietro a ogni dialogo di un fumetto fa sì che nessuno, fino ad oggi, si sia mai lamentato dei font dei fumetti.&lt;/p&gt;

&lt;p&gt;Qui sotto riporto una tavola di Batman, per farvi capire da dove nasce l’ispirazione.&lt;br /&gt;
&lt;img src=&quot;/images/batman-begins-1986.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Ti ricordo che all’epoca Internet non c’era, o meglio esisteva da 1 anno: molto difficile trovare ispirazione on line. Io ricordo che dovetti installare non solo Netscape ma anche i driver TCP/IP a mano, coi floppy, su Windows 3.1).&lt;/p&gt;

&lt;h2 id=&quot;il-comic-sans&quot;&gt;Il Comic Sans&lt;/h2&gt;

&lt;p&gt;Fu così che nacque il Comic Sans, un carattere fortemente ispirato ai fumetti, che però non devi MAI utilizzare se vuoi disegnare fumetti per professione, pena il licenziamento.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ComicSans.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tuttavia, quando il font era ormai pronto, &lt;strong&gt;il team di Microsoft Bob lo scartò&lt;/strong&gt;: non perchè fosse brutto, bensì perchè il progetto era ormai completato e &lt;strong&gt;tutte le textbox erano state ottimizzate per il Times New Roman&lt;/strong&gt;. Modificare il font significava entrare in ogni possibile textbox e aggiustarle per rendere il testo visualizzabile correttamente, cosa non proprio praticabile (all’epoca non esistevano reponsive design – la risoluzione “normale” era 800x600, credo…).&lt;/p&gt;

&lt;p&gt;Quindi, se il Comic Sans non venne al mondo tramite Microsoft Bob, come si è diffuso?&lt;/p&gt;

&lt;h2 id=&quot;come-è-diventato-il-font-più-conosciuto-al-mondo-3d-movie-maker&quot;&gt;Come è diventato il font più conosciuto al mondo: 3D Movie Maker&lt;/h2&gt;

&lt;p&gt;In un’epoca in cui Microsoft aveva il monopolio totale di ogni cosa fosse installata sui vostri pc, i programmatori di un altro progetto Microsoft decisero di usare il Comic Sans per le vignette di aiuto di un software chiamato &lt;strong&gt;3D Movie Maker&lt;/strong&gt;, un applicativo per bambini che permetteva di inserire personaggi in un ambiente virtuale (nel 1995, eh!).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/3dmoviemaker.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Su youtube esistono dei filmati che mostrano &lt;a href=&quot;https://www.youtube.com/watch?v=LNBCoaZn8FU&quot;&gt;3D Movie Maker in azione&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Da quel momento in poi, l’ascesa di Comic Sans fu inarrestabile: fu inserito in &lt;strong&gt;Windows 95&lt;/strong&gt;, fu uno dei caratteri di default di &lt;strong&gt;Microsoft Publisher&lt;/strong&gt; e del neonato &lt;strong&gt;Internet Explorer 3.0&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Il Comic Sans è stato usato in molte situazioni sconvenienti. Ad esempio, il font stato usato per il testo di un memoriale di guerra, ai lati delle ambulanze, nei CV. In rete esistono centinaia di pagine sull’uso sconveniente del font, ad esempio su &lt;a href=&quot;https://www.buzzfeed.com/sophiegadd/absolutely-beautiful-examples-of-comic-sans-in-the-wild?utm_term=.brjVv42rMK#.pmnvYMPbkN&quot;&gt;BuzzFeed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Io personalmente posso dire di aver sostenuto &lt;strong&gt;esami all’università&lt;/strong&gt; la cui traccia era scritta in Comic Sans.&lt;/p&gt;

&lt;h2 id=&quot;e-ora&quot;&gt;E ora?&lt;/h2&gt;

&lt;p&gt;Beh, dovrebbe essere chiaro, &lt;strong&gt;non devi usarlo&lt;/strong&gt;. Per. nessun. motivo. al. mondo.&lt;/p&gt;

&lt;p&gt;Ci sono pochissimi motivi per cui dovresti usare il comic sans, e te li elenco qui:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Se la tua audience ha meno di 2 anni.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Se la tua audience è composta da dislessici&lt;/strong&gt;. E’ infatti noto che i dislessici trovano più facile leggere il comic sans rispetto agli altri font.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Questo articolo non sarebbe mai nato senza il primo capitolo di un libro che purtroppo ho perso in aereo: &lt;a href=&quot;http://amzn.to/2zDrYID&quot; title=&quot;Sei proprio il mio Typo &quot;&gt;Sei proprio il mio Typo, di Simon Garfield&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://amzn.to/2zDrYID&quot;&gt;&lt;img src=&quot;/images/seproprioilmiotypo.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Per altre storie bizzarre sui font, questo è il libro che fa per te;)&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="comic sans" /><category term="font" /><category term="storia" /><category term="vincent connaire" /><category term="microsoft" /><category term="microsoft bob" /><category term="design" /><summary type="html">La storia che sto per raccontare riguarda uno degli aspetti più mitologici dell’informatica intera: il Comic Sans, il carattere più odiato in assoluto, ma allo stesso tempo uno dei più usati al mondo.</summary></entry><entry><title type="html">Growth Hacker: cos’è? Intervista a Raffaele Gaito</title><link href="https://michelenasti.com/2017/11/18/growth-hacker-cos-e-intervista-a-raffaele-gaito.html" rel="alternate" type="text/html" title="Growth Hacker: cos'è? Intervista a Raffaele Gaito" /><published>2017-11-18T01:00:00+01:00</published><updated>2017-11-25T18:27:35+01:00</updated><id>https://michelenasti.com/2017/11/18/growth-hacker-cos-e-intervista-a-raffaele-gaito</id><content type="html" xml:base="https://michelenasti.com/2017/11/18/growth-hacker-cos-e-intervista-a-raffaele-gaito.html">&lt;p&gt;Conosco &lt;a href=&quot;https://www.raffaelegaito.com/&quot; title=&quot;Raffaele Gaito, il blog&quot;&gt;Raffaele Gaito&lt;/a&gt; dai tempi dell’università, e mettiamolo subito in chiaro: siamo amici 😎 Oggi dobbiamo &lt;em&gt;fare finta&lt;/em&gt; che non abbiamo mai bevuto una birra insieme (mai!) e parleremo di una cosa che Raf conosce molto bene:&lt;/p&gt;

&lt;h2 id=&quot;il-growth-hacking&quot;&gt;il Growth Hacking&lt;/h2&gt;

&lt;p&gt;Raffaele ha pubblicato il suo primo libro (&lt;a href=&quot;https://www.raffaelegaito.com/growth-hacker-libro/&quot;&gt;Growth Hacker, mindset e strumenti per far crescere il tuo business&lt;/a&gt; - c’è un’anteprima gratuita!) e ho colto l’occasione per fargli qualche domanda.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.raffaelegaito.com/growth-hacker-libro/&quot;&gt;&lt;img src=&quot;/images/growth-hacker-libro-cover-3d-medium.png&quot; alt=&quot;Growth Hacker - il libro&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ma questo Growth Hacking… cos’è? E soprattutto, interessa anche ai developer? Facciamocelo raccontare dal diretto interessato!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) E’ utile iniziare l’intervista parlando del perchè esiste il marketing: rivolgiamoci agli sviluppatori. “Non è il linguaggio di programmazione, o i framework, a decretare il successo di un prodotto, ma il marketing che ne consegue”. Se il prodotto è utile, e la gente ne ha bisogno e soprattutto lo viene a sapere, allora avrà successo. E’ un’affermazione vera?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Si! Assolutamente! Non conta il linguaggio, quelle sono pippe da tecnici. Hai detto una cosa chiave: la gente deve venirlo a sapere. &lt;em&gt;Se fai il miglior programma del mondo, col codice più ottimizzato e col linguaggio più moderno, però lo sai solo tu e tuo cugino, quante copie ti aspetti di vendere?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(Michele) Partiamo dall’inizio. Hai cofondato Mangatar, una startup che si occupava di videogames, e a un certo punto hai lasciato. I motivi sono descritti&lt;/strong&gt; &lt;a href=&quot;https://www.raffaelegaito.com/2016-lascio-mangatar-zona-di-comfort-crescita/&quot;&gt;&lt;strong&gt;in un tuo post&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;, ma il TL;DR è che sentivi la necessità di passare ad altro. Già in quel post (gennaio 2016) parlavi di Growth Hacking, parola che all’epoca era sconosciuta ai più. Come hai preso la strada del GH? Quand’è che l’hai conosciuto, e ne sei stato “folgorato”?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(Raffaele): Ho iniziato ad interessarmi al Growth Hacking più o meno 4-5 anni fa. Non ricordo esattamente quando, ma già leggevo cose in giro con molto interesse, cercando di capire se fosse la solita fuffa americana o meno.&lt;/p&gt;

&lt;p&gt;Ho iniziato fin da subito a fare qualche esperimento su cose più piccole, anche perché non avevo colto in pieno il potenziale della cosa, e avevo il classico approccio di chi scopre il Growth Hacking per la prima volta: pensare che si tratti di una scorciatoia e di qualche trucchetto per il successo.&lt;/p&gt;

&lt;p&gt;Ne sono rimasto folgorato perché è la perfetta intersezione di mondi diversi ai quali però ero molto legato. Riusciva a mettere nello stesso contesto le mie competenze tecniche, la mia passione per il marketing e il mio essere un uomo di business, un imprenditore.&lt;/p&gt;

&lt;p&gt;Una volta che scopri sta cosa non puoi più tornare indietro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/raf_gaito.jpg&quot; alt=&quot;Raffaele Gaito&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Questo è un blog di sviluppatori, gente che di marketing generalmente ne capisce (volontariamente) poco. Puoi spiegaci il GH “orientato ai developer”?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) La cosa bella è che il Growth Hacking è perfetto per i programmatori e te lo dico proprio da programmatore! Per chi non lo sapesse io infatti sono laureato in informatica e per una vita ho fatto lo sviluppatore. Qualsiasi linguaggio, qualsiasi piattaforma.&lt;/p&gt;

&lt;p&gt;Come dicevo all’inizio io sono rimasto folgorato dal Growth Hacking proprio perché era molto concreto, molto vicino al mindset e all’approccio di un programmatore.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Lo so bene cosa pensano i programmatori del marketing ed è quello che pensavo anche io. Tutto troppo fumoso, tutto troppo generico, il rischio fuffa è dietro l’angolo.&lt;/em&gt; Invece il Growth Hacking arriva li con una metodologia precisa, i suoi framework, i suoi tool e i suoi modelli e tu capisci che è molto di più di “semplice marketing”.&lt;/p&gt;

&lt;p&gt;Uno degli aspetti fondamentali del Growth Hacking è la parte di prodotto che non viene mai sottolineata abbastanza. Molte attività di Growth Hacking si fanno quindi mettendo mano al codice e modificando il proprio prodotto per sperimentare nuove soluzioni, per adattarlo dopo la raccolta dati, per integrare modifiche suggerite dagli utenti, per fare A/B testing e così via.&lt;/p&gt;

&lt;p&gt;E il prodotto è programmazione, c’è poco da fare!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Possiamo dire che gli sviluppatori partono avvantaggiati se vogliono diventare Growth Hacking?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;E’ vero che il programmatore può avvicinarsi molto facilmente, perchè ci sono degli aspetti tecnici del Growth Hacking che già padroneggia, ma non possiamo dire che è la categoria ideale perchè può avvicinarsi chiunque: ho colleghi che arrivano dal marketing, o dal prodotto …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) E’ in uscita&lt;/strong&gt; &lt;a href=&quot;https://www.raffaelegaito.com/growth-hacker-libro/&quot;&gt;&lt;strong&gt;il tuo libro&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;, immagino sia fantastico potersi definire anche “autore di libri”. In giro ce n’erano già altri (pochi in verità) sul GH, io ne ho addirittura recensito uno. Perchè dovremmo leggere il tuo? (Ovviamente lo faremo 😉)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Si ho visto che hai recensito “Growth Hacking” di Luca Barboni e Federico Simonetti. Luca è un grande amico e collega. Siamo stai i primi a portare questa disciplina in Italia e collaboriamo insieme su parecchie iniziative.&lt;/p&gt;

&lt;p&gt;Detto questo, perché leggere il mio libro? Provo a darti risposte diverse in base a scenari diversi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Se è la prima cosa che leggi sul Growth Hacking, è un libro perfetto con una piccola parte teorica (molto piccola) e poi tanta ciccia. Ti consentirà di capire velocemente di cosa si tratta, ma essere anche in grado di metterlo in pratica.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Se hai già letto altre cose sul Growth Hacking (tipo il libro di Luca), allora meglio ancora perché il taglio del libro è quello di essere strategico/operativo per la quotidianità. Se ti interessa applicare questa metodologia sul tuo progetto o vuoi farne un lavoro questo è il libro perfetto.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Se se già un po’ più avanti e magari hai fatto anche qualche corso (uno dei miei, ad esempio), il libro è il perfetto completamento a tutto quello che hai studiato fino ad oggi. È un manualetto da tenere sulla scrivania in ufficio e tirare fuori quando ti serve!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il libro è perfetto per le agenzie, per i freelance, per i marketer, per i growth hacker, per i product manager, per i project manager e per chiunque in azienda (la propria o quella di altri) abbia la necessità crescere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) In questi anni avrai avuto a che fare con tante realtà; come è stato recepito il GH dal management delle aziende per cui hai lavorato? E dagli altri reparti? (marketing… sviluppo…)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Lo scenario è cambiato molto negli anni. Se nelle primissime fasi la cosa veniva guardata con sospetto, ora invece è tutto molto più facile. Sono anni che spingo tantissimo sull’evangelizzazione, l’informazione e la sensibilizzazione verso questa tematica e i risultati oggi si vedono.&lt;/p&gt;

&lt;p&gt;Faccio corsi nelle università, vado a parlare nelle multinazionali, ho studenti in tutta Italia, il libro è finito bestseller. Diciamo che tutte queste cose sarebbero state impossibili senza aver “seminato” a lungo negli anni precedenti.&lt;/p&gt;

&lt;p&gt;Ovviamente la risposta cambia da reparto a reparto, ma l’importante è essere concreti e non esagerare mai. È chiaro che &lt;em&gt;se vado nel reparto marketing e gli dico “il marketing è morto”&lt;/em&gt; difficilmente otterrò la loro fiducia e la loro attenzione. Anche perché è falso e il Growth Hacking è uno strumento in più nella loro cassetta degli attrezzi.&lt;/p&gt;

&lt;p&gt;Io ho sempre usato un approccio concreto fatto di tanti esempi, tanti numeri e tanto sporcarsi le mani. E dopo un po’ si convincono tutti: dal manager al marketer, passando anche per i programmatori più scettici.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Una domanda che mi è arrivata dalla community di DevDay Salerno: quanto guadagna un GH?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Direi che è una domanda che lascia il tempo che trova. E come se ti chiedessi “quanto guadagna un programmatore?”. Non esiste una risposta unica perché dovrei specificare in che nazione lavora, in che linguaggio programma, in che azienda lavora e così via.&lt;/p&gt;

&lt;p&gt;Allo stesso modo non esiste un modo unico di rispondere alla domanda del Growth Hacker. Per darti un’idea dell’importanza che questa figura ha attualmente sul mercato, ti posso dire che da una chiacchierata fatta ultimamente con una grossa startup americana è uscito fuori che in Silicon Valley ormai tutti vogliono solo due figure: il growth hacker e il data scientist e sono disposti a pagarli a peso d’oro. Si parlava di cifre sui &lt;strong&gt;200k l’anno&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Qui in Inghilterra dove vivo io le offerte per questa figura si aggirano sui 60-80k l’anno e se guardi sui siti specializzati vedrai che in america uno stipendio medio per una figura del genere varia dai 120k ai 160k l’anno.&lt;/p&gt;

&lt;p&gt;Però, ripeto, sono numeri campati in aria che hanno poco senso estrapolati dal loro contesto. Dipende se sei freelance, se sei assunto, se lavori in agenzia e così via.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Cosa fa durante una “giornata lavorativa”?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Dipende molto dal tipo di progetto su cui sta lavorando e dalla fase in cui si trova (ricordo che il Growth Hacking è un processo). Generalmente passi un sacco di tempo sui numeri e sulla strategia, che significa molto excel, molto analytics e molto trello (o asana o altro).&lt;/p&gt;

&lt;p&gt;Molto dipende anche dal fatto se lavori con un team di Growth Hacking (e allora hai un ruolo più ad alto livello) oppure se sei da solo (e gestisci sia la parte strategica che operativa). Per farti qualche esempio concreto: ci sono una serie di attività legate agli esperimenti dove si va di brainstorming e prioritizzazione; tutta una serie di attività legate alla raccolta dati dove vai dallo svolgere customer interview a raccogliere gli hard data; tantissime attività sul prodotto che, come dicevo prima, coinvolgono il team di sviluppo e così via.&lt;/p&gt;

&lt;p&gt;Poi ancora, in base allo step del funnel in cui ti trovi e ai canali sui quali sei attivo potresti dover gestire campagne di advertising, realizzare landing page, produrre contenuti, sviluppare nuove feature, e chi più ne ha più ne metta.&lt;/p&gt;

&lt;p&gt;Come avrai capito il Growth Hacking è un mondo vastissimo dove dentro rientrano attività appartenenti a settori molto diversi tra di loro.&lt;/p&gt;

&lt;p&gt;Il cuore di tutto questo è una metodologia basata sugli esperimenti, quindi indipendentemente dal cosa fai il concetto base è: &lt;em&gt;il Growth Hacker nella quotidianità fa test. Un sacco di test&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Come si diventa Growth Hacker?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Fino a qualche anno fa la situazione era tragica perché i contenuti in italiano erano pochi e anche di pessima qualità. Quindi bisognava per forza studiare dal materiale americano e poi andare per tentativi, cosa che ho fatto io e tutti quelli che come me hanno iniziato diversi anni fa.&lt;/p&gt;

&lt;p&gt;Oggi lo scenario è ben diverso, ci sono libri in italiano che parlano di questo argomento, sia libri scritti da autori italiani (come il mio) che libri americani tradotti in italiano. Ci sono tanti corsi, sia online che in aula e io, ad esempio, ho realizzato il &lt;a href=&quot;http://raffaele.link/growth-hacking-masterclass&quot;&gt;primo corso online sul Growth Hacking&lt;/a&gt;, proprio insieme a Luca, dove trattiamo l’argomento dalla A alla Z.&lt;/p&gt;

&lt;p&gt;A questo aggiungi il fatto che anche le università si sono svegliate e ne hanno capito l’importanza. Oggi ci sono sia percorsi completamente dedicati al Growth Hacking che moduli o lezioni su questo tema nei “classici” corsi dedicati al marketing o al business.&lt;/p&gt;

&lt;p&gt;Quindi il materiale per studiare c’è ed è pure tanto. Ovviamente questo da solo non basta, visto che è una materia molto pratica. Come ho scritto sul mio blog io credo nel metodo “studia-sperimenta-aspetta”. Quindi dopo una bella infarinatura teorica non c’è modo migliore di imparare qualcosa di nuovo se non sporcandosi le mani e smanettando su progetti veri!&lt;/p&gt;

&lt;p&gt;In generale considera che la figura del Growth Hacker è quella che nel mondo delle risorse umane viene chiamata “profilo a T” e quindi è una persona con un bagaglio di competenze incredibili, proprio perché spazia da aspetti tecnici alle vendite, dal saper scrivere al saper fare advertising, dal marketing all’analytics e chi più ne ha più ne metta!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(M) Come ultima domanda ti chiedo: mettiamoci nei panni di una startup neonata che ha zero euro, un prodotto in fase di realizzazione e bisogno di crescere: quali tool consiglieresti, i più economici possibili, per iniziare a monitorare le proprie metriche? Si può fare con zero euro?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(R) Il Growth Hacking non si può fare con zero euro, togliamocelo dalla testa. E allo stesso modo &lt;em&gt;non si può fare startup con zero euro&lt;/em&gt;. È una stupidaggine che dobbiamo smettere di ripetere. Se hai zero euro vai a fare il dipendente, non ti metti a fare la cosa più rischiosa al mondo: l’imprenditore.&lt;/p&gt;

&lt;p&gt;Detto questo i soldi li devi trovare, che siano i tuoi risparmi o che siano quelli di un secondo lavoro che fai per mantenerti, un piccolo budget è necessario.&lt;/p&gt;

&lt;p&gt;La grossa differenza del Growth Hacking è che ti permette di ottenere risultati tangibili e fin da subito anche con budget molto piccoli perché ti permette di usare il budget in maniera più intelligente. La chiave è tutta qui.&lt;/p&gt;

&lt;p&gt;E non è mai questione di tool, ma ancora una volta, è questione di processo e di strategia.&lt;/p&gt;

&lt;p&gt;Se proprio però vuoi una risposta con qualche nome, e so che la vuoi, ti dico che allora si possono fare grandi cose anche con tool di analytics gratuiti come &lt;a href=&quot;https://analytics.google.com/&quot;&gt;Google Analytics&lt;/a&gt; o con tool professionali ma che offrono piani free come &lt;a href=&quot;https://count.ly/&quot;&gt;Countly&lt;/a&gt; e &lt;a href=&quot;https://amplitude.com/&quot;&gt;Amplitude&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Occhio che però per crescere questo non basta. Raccogliere i dati è importante, ma è solo l’inizio. Devi sapere quali dati raccogliere, come leggerli e, soprattutto, quali decisioni prendere da essi.&lt;/p&gt;

&lt;p&gt;E per questo non c’è tool al mondo. Tocca mettersi a studiare ;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grazie Raf per il tuo tempo. Vi lascio con il&lt;/strong&gt; &lt;a href=&quot;http://amzn.to/2hOoizV&quot;&gt;&lt;strong&gt;link al libro su Amazon&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;. alla prossima!&lt;/strong&gt;&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="growth hacking" /><category term="raffaele gaito" /><category term="marketing" /><category term="libro" /><summary type="html">Conosco Raffaele Gaito dai tempi dell’università, e mettiamolo subito in chiaro: siamo amici 😎 Oggi dobbiamo fare finta che non abbiamo mai bevuto una birra insieme (mai!) e parleremo di una cosa che Raf conosce molto bene:</summary></entry><entry><title type="html">Other thoughts about NaN (then, stop)</title><link href="https://michelenasti.com/2017/11/16/why-nan.html" rel="alternate" type="text/html" title="Other thoughts about NaN (then, stop)" /><published>2017-11-16T01:00:00+01:00</published><updated>2017-11-17T10:18:47+01:00</updated><id>https://michelenasti.com/2017/11/16/why-nan</id><content type="html" xml:base="https://michelenasti.com/2017/11/16/why-nan.html">&lt;p&gt;When I posted the &lt;a href=&quot;https://michelenasti.com/2017/11/14/not-a-number-when-javascript-gets-crazy.html&quot; title=&quot;Not-a-Number: when Javascript gets crazy&quot;&gt;NaN article&lt;/a&gt; on facebook in a programmers group, I received some very bad reviews. Let’s analyze them.&lt;/p&gt;

&lt;h2 id=&quot;it-is-obvious&quot;&gt;“It is obvious!”&lt;/h2&gt;

&lt;p&gt;It is obvious, but it’s not common. Partly because I am a developer with some years of experience and, altough I have studied and studying a lot of programming, I have never occourred in &lt;code&gt;NaN&lt;/code&gt;-at-work. You might think that this is impossible, but well, it isn’t because happened to me. Maybe because I rarely do maths without checking types? Maybe because I rarely do maths in Javascript (it’s a very bad idea)?&lt;/p&gt;

&lt;h2 id=&quot;why-nan--nan-is-false&quot;&gt;Why NaN === NaN is false&lt;/h2&gt;

&lt;p&gt;The fact that &lt;code&gt;NaN !== NaN&lt;/code&gt; is true is obvious, after you reason about it.&lt;/p&gt;

&lt;p&gt;When I thought of this the first time, I thought it’s absurd, but after a while I realized that this is the only possible logic behaviour. As some have said, if I divide a number by a string I get &lt;code&gt;NaN&lt;/code&gt;, and if I divide another number by another string I get another &lt;code&gt;NaN&lt;/code&gt;. Are these two&lt;code&gt;NaN&lt;/code&gt; equal? no. &lt;code&gt;NaN&lt;/code&gt; is not even a measurable property.&lt;code&gt;NaN&lt;/code&gt; is a state, and as such it cannot be compared to other&lt;code&gt;NaN&lt;/code&gt;s.&lt;/p&gt;

&lt;p&gt;More on this: &lt;a href=&quot;https://stackoverflow.com/questions/1565164/what-is-the-rationale-for-all-comparisons-returning-false-for-ieee754-nan-values&quot;&gt;What is the rationale for all comparisons returning false for IEEE754 NaN values?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;why-this-is-not-a-js-only-matter&quot;&gt;Why this is not a JS-only matter&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;NaN&lt;/code&gt; has not been invented by Javascript, or by Java. It is here with us since the first processor, and it is used for a wide range of cases. Here are some:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Division of zero by zero&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dividing an infinity by an infinity&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Multiplication of an infinity by a zero&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Any operation in which &lt;em&gt;NaN&lt;/em&gt; is an operand&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Converting a non-numeric string or &lt;em&gt;undefined&lt;/em&gt; into a number&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is described in standard IEEE 754, from 1985. In this standard you can read how integer and decimal numbers are stored inside a computer (&lt;em&gt;spoiler: decimal numbers in a computer are not real, continuous, neither infinite).&lt;/em&gt; You’ll read of many edge cases regarding decimal numbers, along with what should happen when you’re in one of the cases described before. So, &lt;code&gt;NaN&lt;/code&gt; &lt;strong&gt;is a convention followed by pretty much every programming language&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;javascript-quirks&quot;&gt;Javascript Quirks&lt;/h2&gt;

&lt;p&gt;But JS does some &lt;em&gt;stranger things&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It has two &lt;code&gt;isNaN()&lt;/code&gt; functions, and you must choose the one you need carefully.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;the standard &lt;code&gt;isNaN()&lt;/code&gt; function does type cohercion, that’s why &lt;code&gt;isNaN(null) == false&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;and-now&quot;&gt;And Now?&lt;/h2&gt;

&lt;p&gt;Should every developer in the world know this? Yes, but chances are that you’ll never need to use this bit of information.&lt;/p&gt;

&lt;p&gt;Is this a good question in a job interview? Well, I don’t think so.&lt;/p&gt;

&lt;p&gt;Chances are that you’ll never need to do this, and even if you hit &lt;code&gt;NaN&lt;/code&gt;, that’s something you’ll learn in two hours wikipedia’s reading (or my blog, hehehe).&lt;/p&gt;

&lt;p&gt;In a Job interview I would focus on what the candidate can actially do and his way of reasoning.&lt;/p&gt;

&lt;p&gt;Of course, if I’m interviewing for a position that has to deal with financial or mathematical programming, knowing of &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; (and how numbers are processed by the processor). But I wouldn’t do this in Javascript, because JS has no integers.&lt;/p&gt;

&lt;h2 id=&quot;is-it-dumb-to-explore-these-areas-of-a-programming-language&quot;&gt;Is it dumb to explore these areas of a programming language?&lt;/h2&gt;

&lt;p&gt;In my opinion, no. It’s just fun, and a new way to learn something.&lt;/p&gt;

&lt;p&gt;In some very bad comments (ones that started with “you are idiot”) there were some insightful hints that made me follow links, read articles, study more - and write this.&lt;/p&gt;

&lt;p&gt;But on the web I have received some critics like “buy a book and read it”, and the first thing I thought is … &lt;em&gt;haters’ gonna hate&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Others have also accused me of “plagiarism” :D&lt;/p&gt;

&lt;p&gt;Honestly, this happens in every group that has more than 1-2 thousand members; people will comment out just to say that you’re dumb and they’re better.&lt;/p&gt;</content><author><name>musikele</name></author><category term="Italiano" /><category term="nan" /><category term="javascript" /><category term="not-a-number" /><summary type="html">When I posted the NaN article on facebook in a programmers group, I received some very bad reviews. Let’s analyze them.</summary></entry><entry><title type="html">Not-A-Number: when javascript gets crazy</title><link href="https://michelenasti.com/2017/11/14/not-a-number-when-javascript-gets-crazy.html" rel="alternate" type="text/html" title="Not-A-Number: when javascript gets crazy" /><published>2017-11-14T01:00:00+01:00</published><updated>2017-11-14T13:20:42+01:00</updated><id>https://michelenasti.com/2017/11/14/not-a-number-when-javascript-gets-crazy</id><content type="html" xml:base="https://michelenasti.com/2017/11/14/not-a-number-when-javascript-gets-crazy.html">&lt;p&gt;Yesterday I was doing some maintenance on a corporate website when I found out that &lt;code&gt;parseInt()&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt; if the argument is, well, not a number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/not-a-number.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; let pippo = parseInt('a')
NaN
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;NaN&lt;/code&gt; is a constant and stands for &lt;code&gt;Not a Number&lt;/code&gt;. Javascript uses this for some very default cases, for example if you divide a number by a string, etc.&lt;/p&gt;

&lt;p&gt;That’s fair. What comes next is funny :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; pippo == NaN
false
&amp;gt; pippo === NaN
false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Even if a variable is &lt;code&gt;NaN&lt;/code&gt;, you cannot check with the usual operators that it is &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; pippo == pippo
false
&amp;gt; pippo === pippo
false
&amp;gt; NaN == NaN
false
&amp;gt; NaN === NaN
false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Things start to get crazy. As you can see, &lt;code&gt;NaN&lt;/code&gt; is not even equal to itself. You cannot compare anything to &lt;code&gt;NaN&lt;/code&gt;, because &lt;code&gt;NaN&lt;/code&gt; is not equal to anything.&lt;/p&gt;

&lt;h2 id=&quot;sooooo-isnan-&quot;&gt;sooooo… isNaN() ?&lt;/h2&gt;

&lt;p&gt;There is a function called &lt;code&gt;isNaN()&lt;/code&gt; and it’s the only way to detect a &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; isNaN(pippo)
true
&amp;gt; isNaN(3)
false
&amp;gt; isNaN('bau bau micio micio')
true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This function seems to resolve our problems: it detects &lt;em&gt;not&lt;/em&gt;-numbers, and infact a string is considered &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; isNaN(undefined)
true
&amp;gt; isNaN(null)
false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I see your face 😆 Where is the logic?&lt;/p&gt;

&lt;p&gt;&lt;code&gt;isNaN&lt;/code&gt; tries to convert the argument to a number, using the constructor &lt;code&gt;Number()&lt;/code&gt;; if the argument cannot be converted, &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt;

&lt;p&gt;In the case of &lt;code&gt;isNaN(null)&lt;/code&gt;, this is what happens:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;isNaN(null) // Number(null) ==&amp;gt; 0 
&amp;gt; false 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ha ha, &lt;code&gt;Number(null)&lt;/code&gt; returns zero??? Welcome to javascript 😎 This would require a bigger explanation, however JS does a type cohercion trying to compare things. It is described &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-9.3&quot;&gt;here&lt;/a&gt; (warning: it’s a spec, the first 10 lines are understandable, then it’s a mess).&lt;/p&gt;

&lt;p&gt;Of course,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;null == 0
&amp;gt; false
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;🙂&lt;/p&gt;

&lt;p&gt;Just to add the last bit of discoveries around &lt;code&gt;NaN&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;Number(null)
&amp;gt; 0
parseInt(null) 
&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;there-is-another-isnan-around&quot;&gt;There is another isNaN() around&lt;/h2&gt;

&lt;p&gt;The Javascript &lt;code&gt;Number&lt;/code&gt; object also has a &lt;code&gt;isNaN&lt;/code&gt; method, that is way more conservative:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;&amp;gt; Number.isNaN(3)
false
&amp;gt; Number.isNaN('3a')
false
&amp;gt; Number.isNaN('abc')
false
&amp;gt; Number.isNaN(undefined)
false
&amp;gt; Number.isNaN(null)
false
&amp;gt; Number.isNaN(NaN)
true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will return &lt;code&gt;true&lt;/code&gt; only for &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;stop-this-its-a-mess&quot;&gt;Stop this! It’s a mess!&lt;/h2&gt;

&lt;p&gt;Ok, let’s end with a song:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;console.log(`${10/'a'}a${ 10/'b'}a${ 10/'c'}a${10/'d'}a ${10/'e'}a${10/'f'}a${10/'g'}a${ 10/'h'}a Batman!`)
//NaNaNaNaNaNaNaNa NaNaNaNaNaNaNaNa Batman!
&lt;/code&gt;&lt;/pre&gt;</content><author><name>musikele</name></author><category term="Italiano" /><summary type="html">Yesterday I was doing some maintenance on a corporate website when I found out that parseInt() returns NaN if the argument is, well, not a number.</summary></entry></feed>